{
  "id": "a_push_easy_s",
  "template": [
    "__var0__|canPush|__var1__",
    [
      "__var0__|Type|__agent__",
      "__agent__|SubClassOf|Agent",
      "__var0__|hasCapability|__var3__",
      "PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper)",
      "__var3__|isCapabilityOf|__var0__",
      "__var0__|hasGripper|__var4__",
      "__var4__|Type|__component__",
      "__component__|SubClassOf|Gripper",
      "__var1__|Type|__object__",
      "__object__|SubClassOf|Object",
      "__var1__|hasDisposition|__var2__",
      "PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart))",
      "__var2__|isDispositionOf|__var1__",
      "__var1__|hasPart|__var5__",
      "__var5__|Type|__part__",
      "__part__|SubClassOf|RollablePart",
      "__var1__|isApproachableBy|__var0__",
      "__var4__|Type|Gripper",
      "Gripper|SubClassOf|EndEffector",
      "__var0__|hasComponent|__var4__",
      "__var4__|hasApplicableForce|integer#1",
      "__var1__|requiresForce|integer#1",
      "equal(integer#1,integer#1)"
    ]
  ],
  "concepts" : [
  "can push", 
  "pushable",
  "pushing", 
  "approachable", 
  "applicable force", "required_force"  
],
  "answers": [
    {
      "id": "a_push_easy_0s",
      "selected_classes": [
        "toy wagon",
        "caster",
        "robot",
        "claw"
      ],
      "question": "-Inference : kybs|canPush|hx \n -Justifications : Gripper|SubClassOf|EndEffector, wqj|Type|Claw, ToyWagon|SubClassOf|Object, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), kybs|Type|Robot, Claw|SubClassOf|Gripper, wqj|hasApplicableForce|integer#68, kybs|hasComponent|wqj, equal(integer#68,integer#68), kybs|hasCapability|e, Caster|SubClassOf|RollablePart, wqj|Type|Gripper, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), hx|Type|ToyWagon, hx|requiresForce|integer#68, bkd|isDispositionOf|hx, Robot|SubClassOf|Agent, hx|hasPart|jo, e|isCapabilityOf|kybs, hx|isApproachableBy|kybs, hx|hasDisposition|bkd, jo|Type|Caster, kybs|hasGripper|wqj. ",
      "answer": " the robot can push the toy wagon because it has a gripper that can apply sufficient force to move the wagon, which has rollable parts and requires that amount of force for movement."
    },
    {
      "id": "a_push_easy_1s",
      "selected_classes": [
        "remote controlled car",
        "caster",
        "pepper",
        "mechanical hand"
      ],
      "question": "-Inference : u|canPush|htgg \n -Justifications : MechanicalHand|SubClassOf|Gripper, efu|Type|Caster, vp|isCapabilityOf|u, u|Type|Pepper, b|hasApplicableForce|integer#47, Gripper|SubClassOf|EndEffector, b|Type|Gripper, equal(integer#47,integer#47), u|hasCapability|vp, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), Caster|SubClassOf|RollablePart, htgg|hasPart|efu, u|hasGripper|b, vpkl|isDispositionOf|htgg, htgg|hasDisposition|vpkl, u|hasComponent|b, Pepper|SubClassOf|Agent, htgg|requiresForce|integer#47, htgg|isApproachableBy|u, b|Type|MechanicalHand, RemoteControlledCar|SubClassOf|Object, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), htgg|Type|RemoteControlledCar. ",
      "answer": " The robot can push the remote-controlled car because it has a gripper that applies sufficient force, and the car has a rollable part and requires that same amount of force to be moved, making it approachable by the robot."
    },
    {
      "id": "a_push_easy_2s",
      "selected_classes": [
        "office chair",
        "wheel",
        "robot",
        "manipulator"
      ],
      "question": "-Inference : v|canPush|umii \n -Justifications : PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), equal(integer#60,integer#60), v|hasComponent|r, Manipulator|SubClassOf|Gripper, OfficeChair|SubClassOf|Object, hcd|Type|Wheel, r|hasApplicableForce|integer#60, Robot|SubClassOf|Agent, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), fhj|isDispositionOf|umii, r|Type|Manipulator, v|Type|Robot, umii|hasDisposition|fhj, umii|Type|OfficeChair, umii|requiresForce|integer#60, r|Type|Gripper, v|hasCapability|czh, umii|hasPart|hcd, Gripper|SubClassOf|EndEffector, Wheel|SubClassOf|RollablePart, v|hasGripper|r, umii|isApproachableBy|v, czh|isCapabilityOf|v. ",
      "answer": " the robot can push the office chair because it has a gripper capable of applying sufficient force, and the chair has a rollable part that makes it approachable by the robot."
    },
    {
      "id": "a_push_easy_3s",
      "selected_classes": [
        "shopping cart",
        "caster",
        "robot",
        "two-finger claw"
      ],
      "question": "-Inference : xzm|canPush|d \n -Justifications : zyd|hasApplicableForce|integer#64, TwoFingerClaw|SubClassOf|Gripper, zyd|Type|TwoFingerClaw, d|hasPart|fh, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), f|isCapabilityOf|xzm, d|hasDisposition|k, xzm|hasComponent|zyd, Gripper|SubClassOf|EndEffector, k|isDispositionOf|d, xzm|hasGripper|zyd, zyd|Type|Gripper, xzm|hasCapability|f, d|requiresForce|integer#64, equal(integer#64,integer#64), MiniShoppingCart|SubClassOf|Object, d|isApproachableBy|xzm, xzm|Type|Robot, Robot|SubClassOf|Agent, fh|Type|Caster, d|Type|MiniShoppingCart, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), Caster|SubClassOf|RollablePart. ",
      "answer": " the robot can push the shopping cart because it has a gripper that applies sufficient force, and the cart has a rollable part and is approachable by the robot."
    },
    {
      "id": "a_push_easy_4s",
      "selected_classes": [
        "roomba",
        "wheel",
        "robot",
        "manipulator"
      ],
      "question": "-Inference : hxby|canPush|exvf \n -Justifications : jk|Type|Manipulator, jk|Type|Gripper, hxby|hasComponent|jk, exvf|requiresForce|integer#37, jk|hasApplicableForce|integer#37, hxby|Type|Robot, Manipulator|SubClassOf|Gripper, exvf|hasDisposition|hdx, Gripper|SubClassOf|EndEffector, Robot|SubClassOf|Agent, equal(integer#37,integer#37), PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), exvf|hasPart|umg, ps|isCapabilityOf|hxby, umg|Type|Wheel, exvf|isApproachableBy|hxby, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), exvf|Type|RoombaRobot, hxby|hasCapability|ps, hdx|isDispositionOf|exvf, RoombaRobot|SubClassOf|Object, Wheel|SubClassOf|RollablePart, hxby|hasGripper|jk. ",
      "answer": " the robot can push the roomba robot because it has a gripper with sufficient force to apply, and the roomba robot is approachable and has a part that is rollable, making it pushable."
    },
    {
      "id": "a_push_easy_5s",
      "selected_classes": [
        "office chair",
        "roller",
        "pepper",
        "two-finger claw"
      ],
      "question": "-Inference : pxn|canPush|mlp \n -Justifications : pxn|hasGripper|ku, pxn|hasCapability|mybn, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), ysof|Type|Roller, TwoFingerClaw|SubClassOf|Gripper, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), OfficeChair|SubClassOf|Object, mlp|hasDisposition|xl, mybn|isCapabilityOf|pxn, Gripper|SubClassOf|EndEffector, pxn|hasComponent|ku, equal(integer#64,integer#64), Pepper|SubClassOf|Agent, xl|isDispositionOf|mlp, mlp|requiresForce|integer#64, ku|Type|TwoFingerClaw, Roller|SubClassOf|RollablePart, mlp|isApproachableBy|pxn, ku|Type|Gripper, ku|hasApplicableForce|integer#64, mlp|Type|OfficeChair, pxn|Type|Pepper, mlp|hasPart|ysof. ",
      "answer": " The robot can push the chair because it has a gripper that allows for pushing, and the chair is approachable and requires a force within the gripper's capability."
    },
    {
      "id": "a_push_easy_6s",
      "selected_classes": [
        "remote controlled car",
        "roller",
        "pepper",
        "manipulator"
      ],
      "question": "-Inference : f|canPush|br \n -Justifications : br|Type|RemoteControlledCar, Gripper|SubClassOf|EndEffector, r|isDispositionOf|br, f|hasGripper|xat, RemoteControlledCar|SubClassOf|Object, equal(integer#50,integer#50), br|hasPart|xxfb, f|Type|Pepper, z|isCapabilityOf|f, br|isApproachableBy|f, Pepper|SubClassOf|Agent, Manipulator|SubClassOf|Gripper, xxfb|Type|Roller, xat|Type|Manipulator, f|hasComponent|xat, xat|hasApplicableForce|integer#50, br|hasDisposition|r, Roller|SubClassOf|RollablePart, f|hasCapability|z, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), xat|Type|Gripper, br|requiresForce|integer#50, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)). ",
      "answer": " The robot can push the remote-controlled car because it has a gripper that applies sufficient force to move the car, which has a roller part and requires that force for movement."
    },
    {
      "id": "a_push_easy_7s",
      "selected_classes": [
        "shopping cart",
        "caster",
        "robot",
        "two-finger claw"
      ],
      "question": "-Inference : lp|canPush|qg \n -Justifications : osj|isDispositionOf|qg, zjjz|Type|Gripper, lp|hasCapability|kcc, qg|hasDisposition|osj, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), Caster|SubClassOf|RollablePart, qg|requiresForce|integer#33, t|Type|Caster, lp|hasGripper|zjjz, kcc|isCapabilityOf|lp, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), TwoFingerClaw|SubClassOf|Gripper, qg|hasPart|t, qg|isApproachableBy|lp, zjjz|Type|TwoFingerClaw, equal(integer#33,integer#33), MiniShoppingCart|SubClassOf|Object, Gripper|SubClassOf|EndEffector, zjjz|hasApplicableForce|integer#33, Robot|SubClassOf|Agent, qg|Type|MiniShoppingCart, lp|hasComponent|zjjz, lp|Type|Robot. ",
      "answer": " the robot can push the mini shopping cart because it has a pushing capability with its gripper, and the cart has a rollable part that makes it approachable by the robot. The required force for pushing matches the gripper's applicable force."
    },
    {
      "id": "a_push_easy_8s",
      "selected_classes": [
        "office chair",
        "pivot wheel",
        "pr2",
        "manipulator"
      ],
      "question": "-Inference : fu|canPush|itc \n -Justifications : PivotWheel|SubClassOf|RollablePart, Gripper|SubClassOf|EndEffector, OfficeChair|SubClassOf|Object, wzx|hasApplicableForce|integer#31, fu|hasGripper|wzx, Manipulator|SubClassOf|Gripper, iu|isCapabilityOf|fu, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), Pr2|SubClassOf|Agent, fu|hasComponent|wzx, wzx|Type|Manipulator, itc|requiresForce|integer#31, itc|Type|OfficeChair, wzx|Type|Gripper, j|Type|PivotWheel, itc|hasDisposition|g, fu|Type|Pr2, itc|isApproachableBy|fu, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), g|isDispositionOf|itc, equal(integer#31,integer#31), itc|hasPart|j, fu|hasCapability|iu. ",
      "answer": " The robot can push the office chair because it has a gripper with sufficient force to apply, and the chair has rollable parts and an approachable disposition for pushing."
    },
    {
      "id": "a_push_easy_9s",
      "selected_classes": [
        "remote controlled car",
        "wheel",
        "pepper",
        "mechanical hand"
      ],
      "question": "-Inference : pq|canPush|m \n -Justifications : wvl|Type|Gripper, m|requiresForce|integer#56, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), m|Type|RemoteControlledCar, pq|hasComponent|wvl, Wheel|SubClassOf|RollablePart, m|hasPart|hg, wvl|Type|MechanicalHand, m|isApproachableBy|pq, pq|hasCapability|kg, kg|isCapabilityOf|pq, pq|hasGripper|wvl, RemoteControlledCar|SubClassOf|Object, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), oyqk|isDispositionOf|m, hg|Type|Wheel, equal(integer#56,integer#56), Pepper|SubClassOf|Agent, pq|Type|Pepper, m|hasDisposition|oyqk, Gripper|SubClassOf|EndEffector, wvl|hasApplicableForce|integer#56, MechanicalHand|SubClassOf|Gripper. ",
      "answer": " The pepper robot can push the remote-controlled car because it has a gripper that can apply sufficient force to move the car, which has wheels and requires a specific amount of force to be pushed."
    },
    {
      "id": "a_push_easy_10s",
      "selected_classes": [
        "remote controlled car",
        "caster",
        "tiago",
        "claw"
      ],
      "question": "-Inference : nq|canPush|st \n -Justifications : rexi|isDispositionOf|st, Claw|SubClassOf|Gripper, nq|hasCapability|lx, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), nq|hasComponent|ewhp, nzzx|Type|Caster, lx|isCapabilityOf|nq, st|requiresForce|integer#56, st|isApproachableBy|nq, st|hasDisposition|rexi, RemoteControlledCar|SubClassOf|Object, Caster|SubClassOf|RollablePart, st|hasPart|nzzx, nq|Type|Tiago, ewhp|Type|Claw, equal(integer#56,integer#56), ewhp|hasApplicableForce|integer#56, nq|hasGripper|ewhp, Tiago|SubClassOf|Agent, ewhp|Type|Gripper, st|Type|RemoteControlledCar, Gripper|SubClassOf|EndEffector. ",
      "answer": " The robot can push the remote-controlled car because it has a pushing capability with a gripper that applies sufficient force to match the required force of the car, and the car is approachable by the robot and has a rollable part that allows it to be pushed."
    },
    {
      "id": "a_push_easy_11s",
      "selected_classes": [
        "roomba",
        "pivot roller",
        "tiago",
        "two-finger claw"
      ],
      "question": "-Inference : nlqf|canPush|rs \n -Justifications : nlqf|hasGripper|bd, rs|hasDisposition|pih, nlqf|hasCapability|kyy, Gripper|SubClassOf|EndEffector, Tiago|SubClassOf|Agent, TwoFingerClaw|SubClassOf|Gripper, nlqf|hasComponent|bd, nlqf|Type|Tiago, rs|requiresForce|integer#43, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), bd|Type|Gripper, b|Type|PivotRoller, bd|Type|TwoFingerClaw, bd|hasApplicableForce|integer#43, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), rs|isApproachableBy|nlqf, kyy|isCapabilityOf|nlqf, pih|isDispositionOf|rs, rs|hasPart|b, rs|Type|RoombaRobot, PivotRoller|SubClassOf|RollablePart, equal(integer#43,integer#43), RoombaRobot|SubClassOf|Object. ",
      "answer": " the robot can push the object because it has a gripper that can apply sufficient force to approach and interact with the object, which has a disposition for being pushed due to its rollable part."
    },
    {
      "id": "a_push_easy_12s",
      "selected_classes": [
        "roomba",
        "wheel",
        "pepper",
        "claw"
      ],
      "question": "-Inference : dmzx|canPush|k \n -Justifications : k|isApproachableBy|dmzx, dmzx|hasComponent|sef, Pepper|SubClassOf|Agent, Claw|SubClassOf|Gripper, uk|Type|Wheel, equal(integer#33,integer#33), dmzx|hasCapability|x, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), RoombaRobot|SubClassOf|Object, sef|hasApplicableForce|integer#33, k|Type|RoombaRobot, sef|Type|Gripper, lkii|isDispositionOf|k, dmzx|hasGripper|sef, dmzx|Type|Pepper, k|hasPart|uk, Gripper|SubClassOf|EndEffector, k|hasDisposition|lkii, Wheel|SubClassOf|RollablePart, x|isCapabilityOf|dmzx, sef|Type|Claw, k|requiresForce|integer#33. ",
      "answer": " The robot can push the Roomba because it has a gripper that applies sufficient force to the Roomba's wheel, which is part of its rollable component, and the Roomba has a disposition for being pushed."
    },
    {
      "id": "a_push_easy_13s",
      "selected_classes": [
        "office chair",
        "roller",
        "pr2",
        "two-finger claw"
      ],
      "question": "-Inference : nf|canPush|wv \n -Justifications : wv|hasDisposition|acp, nf|hasComponent|bdqn, Pr2|SubClassOf|Agent, bdqn|Type|TwoFingerClaw, nf|hasCapability|tt, wv|requiresForce|integer#63, wv|Type|OfficeChair, OfficeChair|SubClassOf|Object, TwoFingerClaw|SubClassOf|Gripper, nf|hasGripper|bdqn, wv|hasPart|mnb, Gripper|SubClassOf|EndEffector, wv|isApproachableBy|nf, equal(integer#63,integer#63), Roller|SubClassOf|RollablePart, bdqn|Type|Gripper, bdqn|hasApplicableForce|integer#63, tt|isCapabilityOf|nf, acp|isDispositionOf|wv, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), nf|Type|Pr2, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), mnb|Type|Roller. ",
      "answer": " the robot can push the office chair because it has a pushing capability with its gripper that applies sufficient force, and the chair has a rollable part making it approachable by the robot."
    },
    {
      "id": "a_push_easy_14s",
      "selected_classes": [
        "roomba",
        "wheel",
        "tiago",
        "two-finger claw"
      ],
      "question": "-Inference : bm|canPush|hwmp \n -Justifications : RoombaRobot|SubClassOf|Object, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), rdrh|Type|Gripper, hr|Type|Wheel, hwmp|requiresForce|integer#40, Tiago|SubClassOf|Agent, bm|hasCapability|eu, Wheel|SubClassOf|RollablePart, rdrh|Type|TwoFingerClaw, bky|isDispositionOf|hwmp, TwoFingerClaw|SubClassOf|Gripper, bm|hasComponent|rdrh, eu|isCapabilityOf|bm, Gripper|SubClassOf|EndEffector, hwmp|Type|RoombaRobot, hwmp|hasDisposition|bky, bm|Type|Tiago, equal(integer#40,integer#40), rdrh|hasApplicableForce|integer#40, hwmp|hasPart|hr, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), hwmp|isApproachableBy|bm, bm|hasGripper|rdrh. ",
      "answer": " The robot can push the Roomba because it has a pushing capability with a gripper that applies sufficient force to move the Roomba, which is approachable and has a disposition for being pushed."
    },
    {
      "id": "a_push_easy_15s",
      "selected_classes": [
        "remote controlled car",
        "caster",
        "robot",
        "claw"
      ],
      "question": "-Inference : prl|canPush|mdf \n -Justifications : mdf|hasDisposition|j, Claw|SubClassOf|Gripper, liu|Type|Claw, prl|hasGripper|liu, pqua|Type|Caster, Caster|SubClassOf|RollablePart, liu|Type|Gripper, mdf|hasPart|pqua, j|isDispositionOf|mdf, prl|hasCapability|ts, Robot|SubClassOf|Agent, mdf|isApproachableBy|prl, ts|isCapabilityOf|prl, RemoteControlledCar|SubClassOf|Object, equal(integer#55,integer#55), prl|hasComponent|liu, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), Gripper|SubClassOf|EndEffector, prl|Type|Robot, mdf|requiresForce|integer#55, mdf|Type|RemoteControlledCar, liu|hasApplicableForce|integer#55. ",
      "answer": " the robot can push the remote-controlled car because it has a gripper that can apply sufficient force to the car's rollable part, and the car is approachable by the robot."
    },
    {
      "id": "a_push_easy_16s",
      "selected_classes": [
        "shopping cart",
        "wheel",
        "tiago",
        "claw"
      ],
      "question": "-Inference : beio|canPush|q \n -Justifications : equal(integer#51,integer#51), q|Type|MiniShoppingCart, q|isApproachableBy|beio, ya|isCapabilityOf|beio, q|hasPart|qm, beio|Type|Tiago, beio|hasComponent|xk, MiniShoppingCart|SubClassOf|Object, beio|hasGripper|xk, q|hasDisposition|x, Gripper|SubClassOf|EndEffector, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), q|requiresForce|integer#51, Wheel|SubClassOf|RollablePart, beio|hasCapability|ya, x|isDispositionOf|q, xk|hasApplicableForce|integer#51, xk|Type|Gripper, Tiago|SubClassOf|Agent, qm|Type|Wheel, Claw|SubClassOf|Gripper, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), xk|Type|Claw. ",
      "answer": " The robot can push the mini shopping cart because it has a gripper with sufficient force, and the cart is approachable and has a rollable part that makes it pushable."
    },
    {
      "id": "a_push_easy_17s",
      "selected_classes": [
        "roomba",
        "pivot roller",
        "robot",
        "claw"
      ],
      "question": "-Inference : m|canPush|mcdf \n -Justifications : Robot|SubClassOf|Agent, ravj|Type|Claw, equal(integer#53,integer#53), kwu|isCapabilityOf|m, mcdf|isApproachableBy|m, mcdf|requiresForce|integer#53, m|hasGripper|ravj, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), ravj|Type|Gripper, mcdf|Type|RoombaRobot, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), mcdf|hasDisposition|kxw, mcdf|hasPart|pln, RoombaRobot|SubClassOf|Object, m|Type|Robot, m|hasCapability|kwu, pln|Type|PivotRoller, Claw|SubClassOf|Gripper, ravj|hasApplicableForce|integer#53, Gripper|SubClassOf|EndEffector, kxw|isDispositionOf|mcdf, PivotRoller|SubClassOf|RollablePart, m|hasComponent|ravj. ",
      "answer": " the robot can push the Roomba because it has a gripper with sufficient force to apply, and the Roomba is approachable and requires that amount of force for pushing, as indicated by its disposition and rollable part."
    },
    {
      "id": "a_push_easy_18s",
      "selected_classes": [
        "roomba",
        "wheel",
        "pepper",
        "mechanical hand"
      ],
      "question": "-Inference : x|canPush|wd \n -Justifications : RoombaRobot|SubClassOf|Object, wd|hasPart|l, Gripper|SubClassOf|EndEffector, x|hasGripper|gcki, wd|isApproachableBy|x, MechanicalHand|SubClassOf|Gripper, hwp|isCapabilityOf|x, gcki|Type|MechanicalHand, x|hasCapability|hwp, wd|requiresForce|integer#60, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), j|isDispositionOf|wd, x|Type|Pepper, equal(integer#60,integer#60), Pepper|SubClassOf|Agent, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), gcki|hasApplicableForce|integer#60, wd|hasDisposition|j, x|hasComponent|gcki, gcki|Type|Gripper, Wheel|SubClassOf|RollablePart, l|Type|Wheel, wd|Type|RoombaRobot. ",
      "answer": " The robot can push the Roomba because it has a gripper with sufficient force to apply, and the Roomba is approachable and requires a force within the gripper's capability."
    },
    {
      "id": "a_push_easy_19s",
      "selected_classes": [
        "remote controlled car",
        "pivot wheel",
        "robot",
        "two-finger claw"
      ],
      "question": "-Inference : jor|canPush|tv \n -Justifications : TwoFingerClaw|SubClassOf|Gripper, equal(integer#30,integer#30), u|Type|TwoFingerClaw, tv|isApproachableBy|jor, u|Type|Gripper, RemoteControlledCar|SubClassOf|Object, u|hasApplicableForce|integer#30, jor|hasGripper|u, jor|hasComponent|u, s|isDispositionOf|tv, Robot|SubClassOf|Agent, tv|hasPart|wqy, tnaj|isCapabilityOf|jor, tv|Type|RemoteControlledCar, wqy|Type|PivotWheel, PivotWheel|SubClassOf|RollablePart, tv|hasDisposition|s, jor|hasCapability|tnaj, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), tv|requiresForce|integer#30, Gripper|SubClassOf|EndEffector, jor|Type|Robot, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)). ",
      "answer": " The robot can push the remote-controlled car because it has a gripper with sufficient force to apply, and the car has a pivot wheel that makes it rollable and approachable by the robot."
    }
  ]
}