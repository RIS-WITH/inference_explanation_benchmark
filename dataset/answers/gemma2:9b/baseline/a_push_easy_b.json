{
  "id": "a_push_easy_b",
  "template": [
    "__var0__|canPush|__var1__",
    [
      "__var0__|Type|__agent__",
      "__agent__|SubClassOf|Agent",
      "__var0__|hasCapability|__var3__",
      "PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper)",
      "__var3__|isCapabilityOf|__var0__",
      "__var0__|hasGripper|__var4__",
      "__var4__|Type|__component__",
      "__component__|SubClassOf|Gripper",
      "__var1__|Type|__object__",
      "__object__|SubClassOf|Object",
      "__var1__|hasDisposition|__var2__",
      "PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart))",
      "__var2__|isDispositionOf|__var1__",
      "__var1__|hasPart|__var5__",
      "__var5__|Type|__part__",
      "__part__|SubClassOf|RollablePart",
      "__var1__|isApproachableBy|__var0__",
      "__var4__|Type|Gripper",
      "Gripper|SubClassOf|EndEffector",
      "__var0__|hasComponent|__var4__",
      "__var4__|hasApplicableForce|integer#1",
      "__var1__|requiresForce|integer#1",
      "equal(integer#1,integer#1)"
    ]
  ],
  "concepts" : [
  "can push", 
  "pushable",
  "pushing", 
  "approachable", 
  "applicable force", "required_force"  
],
  "answers": [
    {
      "id": "a_push_easy_0b",
      "selected_classes": [
        "toy wagon",
        "caster",
        "robot",
        "claw"
      ],
      "question": "-Inference : kybs|canPush|hx \n -Justifications : kybs|Type|Robot, Robot|SubClassOf|Agent, kybs|hasCapability|e, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), e|isCapabilityOf|kybs, kybs|hasGripper|wqj, wqj|Type|Claw, Claw|SubClassOf|Gripper, hx|Type|ToyWagon, ToyWagon|SubClassOf|Object, hx|hasDisposition|bkd, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), bkd|isDispositionOf|hx, hx|hasPart|jo, jo|Type|Caster, Caster|SubClassOf|RollablePart, hx|isApproachableBy|kybs, wqj|Type|Gripper, Gripper|SubClassOf|EndEffector, kybs|hasComponent|wqj, wqj|hasApplicableForce|integer#68, hx|requiresForce|integer#68, equal(integer#68,integer#68). ",
      "answer": "\n\nThe robot can push the toy wagon because it has a pushing capability through its claw gripper, which is strong enough to apply the force required to move the wagon. The wagon has a pushable disposition due to its caster wheels and is approachable by the robot.  \n\n\n"
    },
    {
      "id": "a_push_easy_1b",
      "selected_classes": [
        "remote controlled car",
        "caster",
        "pepper",
        "mechanical hand"
      ],
      "question": "-Inference : u|canPush|htgg \n -Justifications : u|Type|Pepper, Pepper|SubClassOf|Agent, u|hasCapability|vp, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), vp|isCapabilityOf|u, u|hasGripper|b, b|Type|MechanicalHand, MechanicalHand|SubClassOf|Gripper, htgg|Type|RemoteControlledCar, RemoteControlledCar|SubClassOf|Object, htgg|hasDisposition|vpkl, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), vpkl|isDispositionOf|htgg, htgg|hasPart|efu, efu|Type|Caster, Caster|SubClassOf|RollablePart, htgg|isApproachableBy|u, b|Type|Gripper, Gripper|SubClassOf|EndEffector, u|hasComponent|b, b|hasApplicableForce|integer#47, htgg|requiresForce|integer#47, equal(integer#47,integer#47). ",
      "answer": "\n\nPepper can push the remote-controlled car because Pepper has a pushing capability through its mechanical hand gripper, which can apply enough force to overcome the car's resistance. The car has a pushable disposition due to its caster wheels and is approachable by Pepper.  \n\n\n"
    },
    {
      "id": "a_push_easy_2b",
      "selected_classes": [
        "office chair",
        "wheel",
        "robot",
        "manipulator"
      ],
      "question": "-Inference : v|canPush|umii \n -Justifications : v|Type|Robot, Robot|SubClassOf|Agent, v|hasCapability|czh, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), czh|isCapabilityOf|v, v|hasGripper|r, r|Type|Manipulator, Manipulator|SubClassOf|Gripper, umii|Type|OfficeChair, OfficeChair|SubClassOf|Object, umii|hasDisposition|fhj, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), fhj|isDispositionOf|umii, umii|hasPart|hcd, hcd|Type|Wheel, Wheel|SubClassOf|RollablePart, umii|isApproachableBy|v, r|Type|Gripper, Gripper|SubClassOf|EndEffector, v|hasComponent|r, r|hasApplicableForce|integer#60, umii|requiresForce|integer#60, equal(integer#60,integer#60). ",
      "answer": "\n\nThe robot can push the office chair because it has a pushing capability through its gripper, which is strong enough to apply the force required to move the chair. The chair is pushable due to having wheels and is approachable by the robot.  \n\n\n"
    },
    {
      "id": "a_push_easy_3b",
      "selected_classes": [
        "shopping cart",
        "caster",
        "robot",
        "two-finger claw"
      ],
      "question": "-Inference : xzm|canPush|d \n -Justifications : xzm|Type|Robot, Robot|SubClassOf|Agent, xzm|hasCapability|f, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), f|isCapabilityOf|xzm, xzm|hasGripper|zyd, zyd|Type|TwoFingerClaw, TwoFingerClaw|SubClassOf|Gripper, d|Type|MiniShoppingCart, MiniShoppingCart|SubClassOf|Object, d|hasDisposition|k, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), k|isDispositionOf|d, d|hasPart|fh, fh|Type|Caster, Caster|SubClassOf|RollablePart, d|isApproachableBy|xzm, zyd|Type|Gripper, Gripper|SubClassOf|EndEffector, xzm|hasComponent|zyd, zyd|hasApplicableForce|integer#64, d|requiresForce|integer#64, equal(integer#64,integer#64). ",
      "answer": "\n\nThe robot can push the shopping cart because it has a pushing capability through its gripper which is strong enough to apply the force required to move the cart. The cart is pushable due to having a caster wheel, and the robot can approach the cart.  \n\n\n"
    },
    {
      "id": "a_push_easy_4b",
      "selected_classes": [
        "roomba",
        "wheel",
        "robot",
        "manipulator"
      ],
      "question": "-Inference : hxby|canPush|exvf \n -Justifications : hxby|Type|Robot, Robot|SubClassOf|Agent, hxby|hasCapability|ps, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), ps|isCapabilityOf|hxby, hxby|hasGripper|jk, jk|Type|Manipulator, Manipulator|SubClassOf|Gripper, exvf|Type|RoombaRobot, RoombaRobot|SubClassOf|Object, exvf|hasDisposition|hdx, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), hdx|isDispositionOf|exvf, exvf|hasPart|umg, umg|Type|Wheel, Wheel|SubClassOf|RollablePart, exvf|isApproachableBy|hxby, jk|Type|Gripper, Gripper|SubClassOf|EndEffector, hxby|hasComponent|jk, jk|hasApplicableForce|integer#37, exvf|requiresForce|integer#37, equal(integer#37,integer#37). ",
      "answer": "\n\nThe robot can push the Roomba because it has a pushing capability through its gripper, which is strong enough to apply the force required to move the Roomba. The Roomba has wheels and a disposition for being pushed, making it approachable by the robot.  \n\n\n"
    },
    {
      "id": "a_push_easy_5b",
      "selected_classes": [
        "office chair",
        "roller",
        "pepper",
        "two-finger claw"
      ],
      "question": "-Inference : pxn|canPush|mlp \n -Justifications : pxn|Type|Pepper, Pepper|SubClassOf|Agent, pxn|hasCapability|mybn, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), mybn|isCapabilityOf|pxn, pxn|hasGripper|ku, ku|Type|TwoFingerClaw, TwoFingerClaw|SubClassOf|Gripper, mlp|Type|OfficeChair, OfficeChair|SubClassOf|Object, mlp|hasDisposition|xl, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), xl|isDispositionOf|mlp, mlp|hasPart|ysof, ysof|Type|Roller, Roller|SubClassOf|RollablePart, mlp|isApproachableBy|pxn, ku|Type|Gripper, Gripper|SubClassOf|EndEffector, pxn|hasComponent|ku, ku|hasApplicableForce|integer#64, mlp|requiresForce|integer#64, equal(integer#64,integer#64). ",
      "answer": "\n\nThe Pepper robot can push the office chair because it has a pushing capability through its gripper, which is strong enough to apply the force required to move the chair. The chair is pushable due to having a roller, and the robot can approach the chair.  \n\n\n"
    },
    {
      "id": "a_push_easy_6b",
      "selected_classes": [
        "remote controlled car",
        "roller",
        "pepper",
        "manipulator"
      ],
      "question": "-Inference : f|canPush|br \n -Justifications : f|Type|Pepper, Pepper|SubClassOf|Agent, f|hasCapability|z, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), z|isCapabilityOf|f, f|hasGripper|xat, xat|Type|Manipulator, Manipulator|SubClassOf|Gripper, br|Type|RemoteControlledCar, RemoteControlledCar|SubClassOf|Object, br|hasDisposition|r, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), r|isDispositionOf|br, br|hasPart|xxfb, xxfb|Type|Roller, Roller|SubClassOf|RollablePart, br|isApproachableBy|f, xat|Type|Gripper, Gripper|SubClassOf|EndEffector, f|hasComponent|xat, xat|hasApplicableForce|integer#50, br|requiresForce|integer#50, equal(integer#50,integer#50). ",
      "answer": "\n\nPepper can push the remote-controlled car because Pepper has a gripper capable of applying enough force to overcome the car's resistance. The car has a roller part that allows it to be pushed and is approachable by Pepper.  \n\n\n"
    },
    {
      "id": "a_push_easy_7b",
      "selected_classes": [
        "shopping cart",
        "caster",
        "robot",
        "two-finger claw"
      ],
      "question": "-Inference : lp|canPush|qg \n -Justifications : lp|Type|Robot, Robot|SubClassOf|Agent, lp|hasCapability|kcc, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), kcc|isCapabilityOf|lp, lp|hasGripper|zjjz, zjjz|Type|TwoFingerClaw, TwoFingerClaw|SubClassOf|Gripper, qg|Type|MiniShoppingCart, MiniShoppingCart|SubClassOf|Object, qg|hasDisposition|osj, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), osj|isDispositionOf|qg, qg|hasPart|t, t|Type|Caster, Caster|SubClassOf|RollablePart, qg|isApproachableBy|lp, zjjz|Type|Gripper, Gripper|SubClassOf|EndEffector, lp|hasComponent|zjjz, zjjz|hasApplicableForce|integer#33, qg|requiresForce|integer#33, equal(integer#33,integer#33). ",
      "answer": "\n\nThe robot can push the shopping cart because it has a pushing capability through its gripper, which is strong enough to apply the force required to move the cart. The cart is pushable due to having a rollable part (a caster), and the robot is able to approach the cart.  \n\n\n"
    },
    {
      "id": "a_push_easy_8b",
      "selected_classes": [
        "office chair",
        "pivot wheel",
        "pr2",
        "manipulator"
      ],
      "question": "-Inference : fu|canPush|itc \n -Justifications : fu|Type|Pr2, Pr2|SubClassOf|Agent, fu|hasCapability|iu, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), iu|isCapabilityOf|fu, fu|hasGripper|wzx, wzx|Type|Manipulator, Manipulator|SubClassOf|Gripper, itc|Type|OfficeChair, OfficeChair|SubClassOf|Object, itc|hasDisposition|g, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), g|isDispositionOf|itc, itc|hasPart|j, j|Type|PivotWheel, PivotWheel|SubClassOf|RollablePart, itc|isApproachableBy|fu, wzx|Type|Gripper, Gripper|SubClassOf|EndEffector, fu|hasComponent|wzx, wzx|hasApplicableForce|integer#31, itc|requiresForce|integer#31, equal(integer#31,integer#31). ",
      "answer": "\n\nThe PR2 robot can push the office chair because it has a pushing capability through its gripper, which is strong enough to apply the force required to move the chair. The chair is pushable due to its rollable part (pivot wheel) and is approachable by the robot.  \n\n\n"
    },
    {
      "id": "a_push_easy_9b",
      "selected_classes": [
        "remote controlled car",
        "wheel",
        "pepper",
        "mechanical hand"
      ],
      "question": "-Inference : pq|canPush|m \n -Justifications : pq|Type|Pepper, Pepper|SubClassOf|Agent, pq|hasCapability|kg, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), kg|isCapabilityOf|pq, pq|hasGripper|wvl, wvl|Type|MechanicalHand, MechanicalHand|SubClassOf|Gripper, m|Type|RemoteControlledCar, RemoteControlledCar|SubClassOf|Object, m|hasDisposition|oyqk, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), oyqk|isDispositionOf|m, m|hasPart|hg, hg|Type|Wheel, Wheel|SubClassOf|RollablePart, m|isApproachableBy|pq, wvl|Type|Gripper, Gripper|SubClassOf|EndEffector, pq|hasComponent|wvl, wvl|hasApplicableForce|integer#56, m|requiresForce|integer#56, equal(integer#56,integer#56). ",
      "answer": "\n\nThe Pepper robot can push the remote-controlled car because it has a pushing capability through its mechanical hand gripper, which can apply enough force to overcome the car's resistance. The car is pushable due to having wheels and is approachable by the Pepper robot.  \n\n\n"
    },
    {
      "id": "a_push_easy_10b",
      "selected_classes": [
        "remote controlled car",
        "caster",
        "tiago",
        "claw"
      ],
      "question": "-Inference : nq|canPush|st \n -Justifications : nq|Type|Tiago, Tiago|SubClassOf|Agent, nq|hasCapability|lx, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), lx|isCapabilityOf|nq, nq|hasGripper|ewhp, ewhp|Type|Claw, Claw|SubClassOf|Gripper, st|Type|RemoteControlledCar, RemoteControlledCar|SubClassOf|Object, st|hasDisposition|rexi, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), rexi|isDispositionOf|st, st|hasPart|nzzx, nzzx|Type|Caster, Caster|SubClassOf|RollablePart, st|isApproachableBy|nq, ewhp|Type|Gripper, Gripper|SubClassOf|EndEffector, nq|hasComponent|ewhp, ewhp|hasApplicableForce|integer#56, st|requiresForce|integer#56, equal(integer#56,integer#56). ",
      "answer": "\n\nThe Tiago robot can push the remote-controlled car because it has a pushing capability through its claw gripper, which applies enough force to overcome the car's resistance. The car is pushable due to having a caster wheel, and the Tiago is able to approach the car.  \n\n\n"
    },
    {
      "id": "a_push_easy_11b",
      "selected_classes": [
        "roomba",
        "pivot roller",
        "tiago",
        "two-finger claw"
      ],
      "question": "-Inference : nlqf|canPush|rs \n -Justifications : nlqf|Type|Tiago, Tiago|SubClassOf|Agent, nlqf|hasCapability|kyy, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), kyy|isCapabilityOf|nlqf, nlqf|hasGripper|bd, bd|Type|TwoFingerClaw, TwoFingerClaw|SubClassOf|Gripper, rs|Type|RoombaRobot, RoombaRobot|SubClassOf|Object, rs|hasDisposition|pih, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), pih|isDispositionOf|rs, rs|hasPart|b, b|Type|PivotRoller, PivotRoller|SubClassOf|RollablePart, rs|isApproachableBy|nlqf, bd|Type|Gripper, Gripper|SubClassOf|EndEffector, nlqf|hasComponent|bd, bd|hasApplicableForce|integer#43, rs|requiresForce|integer#43, equal(integer#43,integer#43). ",
      "answer": "\n\nThe Tiago robot can push the Roomba because it has a pushing capability through its two-finger claw gripper, which is strong enough to apply the force required to move the Roomba. The Roomba has a pushable disposition due to its pivot roller part and is approachable by the Tiago.  \n\n\n"
    },
    {
      "id": "a_push_easy_12b",
      "selected_classes": [
        "roomba",
        "wheel",
        "pepper",
        "claw"
      ],
      "question": "-Inference : dmzx|canPush|k \n -Justifications : dmzx|Type|Pepper, Pepper|SubClassOf|Agent, dmzx|hasCapability|x, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), x|isCapabilityOf|dmzx, dmzx|hasGripper|sef, sef|Type|Claw, Claw|SubClassOf|Gripper, k|Type|RoombaRobot, RoombaRobot|SubClassOf|Object, k|hasDisposition|lkii, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), lkii|isDispositionOf|k, k|hasPart|uk, uk|Type|Wheel, Wheel|SubClassOf|RollablePart, k|isApproachableBy|dmzx, sef|Type|Gripper, Gripper|SubClassOf|EndEffector, dmzx|hasComponent|sef, sef|hasApplicableForce|integer#33, k|requiresForce|integer#33, equal(integer#33,integer#33). ",
      "answer": "\n\nThe Pepper robot can push the Roomba because it has a pushing capability through its claw gripper, which applies enough force to overcome the Roomba's resistance. The Roomba is pushable due to having wheels and being approachable by the Pepper.  \n\n\n"
    },
    {
      "id": "a_push_easy_13b",
      "selected_classes": [
        "office chair",
        "roller",
        "pr2",
        "two-finger claw"
      ],
      "question": "-Inference : nf|canPush|wv \n -Justifications : nf|Type|Pr2, Pr2|SubClassOf|Agent, nf|hasCapability|tt, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), tt|isCapabilityOf|nf, nf|hasGripper|bdqn, bdqn|Type|TwoFingerClaw, TwoFingerClaw|SubClassOf|Gripper, wv|Type|OfficeChair, OfficeChair|SubClassOf|Object, wv|hasDisposition|acp, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), acp|isDispositionOf|wv, wv|hasPart|mnb, mnb|Type|Roller, Roller|SubClassOf|RollablePart, wv|isApproachableBy|nf, bdqn|Type|Gripper, Gripper|SubClassOf|EndEffector, nf|hasComponent|bdqn, bdqn|hasApplicableForce|integer#63, wv|requiresForce|integer#63, equal(integer#63,integer#63). ",
      "answer": "\n\nThe PR2 robot can push the office chair because it has a pushing capability through its gripper, which is strong enough to apply the force required to move the chair. The chair is pushable due to having a roller part, and the robot is able to approach the chair.  \n\n\n"
    },
    {
      "id": "a_push_easy_14b",
      "selected_classes": [
        "roomba",
        "wheel",
        "tiago",
        "two-finger claw"
      ],
      "question": "-Inference : bm|canPush|hwmp \n -Justifications : bm|Type|Tiago, Tiago|SubClassOf|Agent, bm|hasCapability|eu, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), eu|isCapabilityOf|bm, bm|hasGripper|rdrh, rdrh|Type|TwoFingerClaw, TwoFingerClaw|SubClassOf|Gripper, hwmp|Type|RoombaRobot, RoombaRobot|SubClassOf|Object, hwmp|hasDisposition|bky, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), bky|isDispositionOf|hwmp, hwmp|hasPart|hr, hr|Type|Wheel, Wheel|SubClassOf|RollablePart, hwmp|isApproachableBy|bm, rdrh|Type|Gripper, Gripper|SubClassOf|EndEffector, bm|hasComponent|rdrh, rdrh|hasApplicableForce|integer#40, hwmp|requiresForce|integer#40, equal(integer#40,integer#40). ",
      "answer": "\n\nThe Tiago robot can push the Roomba because it has a pushing capability through its two-finger claw gripper, which can apply enough force to move the Roomba. The Roomba has a pushable disposition due to its wheels and is approachable by the Tiago.  \n\n\n"
    },
    {
      "id": "a_push_easy_15b",
      "selected_classes": [
        "remote controlled car",
        "caster",
        "robot",
        "claw"
      ],
      "question": "-Inference : prl|canPush|mdf \n -Justifications : prl|Type|Robot, Robot|SubClassOf|Agent, prl|hasCapability|ts, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), ts|isCapabilityOf|prl, prl|hasGripper|liu, liu|Type|Claw, Claw|SubClassOf|Gripper, mdf|Type|RemoteControlledCar, RemoteControlledCar|SubClassOf|Object, mdf|hasDisposition|j, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), j|isDispositionOf|mdf, mdf|hasPart|pqua, pqua|Type|Caster, Caster|SubClassOf|RollablePart, mdf|isApproachableBy|prl, liu|Type|Gripper, Gripper|SubClassOf|EndEffector, prl|hasComponent|liu, liu|hasApplicableForce|integer#55, mdf|requiresForce|integer#55, equal(integer#55,integer#55). ",
      "answer": "\n\nThe robot can push the remote-controlled car because it has a pushing capability through its claw gripper, which applies enough force to overcome the car's required force for being pushed. The car has a pushable disposition due to its caster wheels and is approachable by the robot.  \n\n\n"
    },
    {
      "id": "a_push_easy_16b",
      "selected_classes": [
        "shopping cart",
        "wheel",
        "tiago",
        "claw"
      ],
      "question": "-Inference : beio|canPush|q \n -Justifications : beio|Type|Tiago, Tiago|SubClassOf|Agent, beio|hasCapability|ya, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), ya|isCapabilityOf|beio, beio|hasGripper|xk, xk|Type|Claw, Claw|SubClassOf|Gripper, q|Type|MiniShoppingCart, MiniShoppingCart|SubClassOf|Object, q|hasDisposition|x, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), x|isDispositionOf|q, q|hasPart|qm, qm|Type|Wheel, Wheel|SubClassOf|RollablePart, q|isApproachableBy|beio, xk|Type|Gripper, Gripper|SubClassOf|EndEffector, beio|hasComponent|xk, xk|hasApplicableForce|integer#51, q|requiresForce|integer#51, equal(integer#51,integer#51). ",
      "answer": "\n\nThe Tiago robot can push the shopping cart because it has a pushing capability through its claw gripper, which is strong enough to apply the force required to move the cart. The cart is pushable due to having wheels and is approachable by the Tiago robot.  \n\n\n"
    },
    {
      "id": "a_push_easy_17b",
      "selected_classes": [
        "roomba",
        "pivot roller",
        "robot",
        "claw"
      ],
      "question": "-Inference : m|canPush|mcdf \n -Justifications : m|Type|Robot, Robot|SubClassOf|Agent, m|hasCapability|kwu, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), kwu|isCapabilityOf|m, m|hasGripper|ravj, ravj|Type|Claw, Claw|SubClassOf|Gripper, mcdf|Type|RoombaRobot, RoombaRobot|SubClassOf|Object, mcdf|hasDisposition|kxw, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), kxw|isDispositionOf|mcdf, mcdf|hasPart|pln, pln|Type|PivotRoller, PivotRoller|SubClassOf|RollablePart, mcdf|isApproachableBy|m, ravj|Type|Gripper, Gripper|SubClassOf|EndEffector, m|hasComponent|ravj, ravj|hasApplicableForce|integer#53, mcdf|requiresForce|integer#53, equal(integer#53,integer#53). ",
      "answer": "\n\nThe robot can push the Roomba because it has a pushing capability through its claw gripper, which is strong enough to apply the force required to move the Roomba. The Roomba has a pushable disposition due to its pivot roller part, and the robot is able to approach the Roomba.  \n\n\n"
    },
    {
      "id": "a_push_easy_18b",
      "selected_classes": [
        "roomba",
        "wheel",
        "pepper",
        "mechanical hand"
      ],
      "question": "-Inference : x|canPush|wd \n -Justifications : x|Type|Pepper, Pepper|SubClassOf|Agent, x|hasCapability|hwp, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), hwp|isCapabilityOf|x, x|hasGripper|gcki, gcki|Type|MechanicalHand, MechanicalHand|SubClassOf|Gripper, wd|Type|RoombaRobot, RoombaRobot|SubClassOf|Object, wd|hasDisposition|j, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), j|isDispositionOf|wd, wd|hasPart|l, l|Type|Wheel, Wheel|SubClassOf|RollablePart, wd|isApproachableBy|x, gcki|Type|Gripper, Gripper|SubClassOf|EndEffector, x|hasComponent|gcki, gcki|hasApplicableForce|integer#60, wd|requiresForce|integer#60, equal(integer#60,integer#60). ",
      "answer": "\n\nThe Pepper robot can push the Roomba because it has a pushing capability through its mechanical hand gripper, which applies enough force to overcome the Roomba's resistance. The Roomba is pushable due to having wheels and being approachable by the Pepper robot.  \n\n\n"
    },
    {
      "id": "a_push_easy_19b",
      "selected_classes": [
        "remote controlled car",
        "pivot wheel",
        "robot",
        "two-finger claw"
      ],
      "question": "-Inference : jor|canPush|tv \n -Justifications : jor|Type|Robot, Robot|SubClassOf|Agent, jor|hasCapability|tnaj, PushingCapability|EquivalentTo|(isCapabilityOf some (hasGripper min 1 Gripper), tnaj|isCapabilityOf|jor, jor|hasGripper|u, u|Type|TwoFingerClaw, TwoFingerClaw|SubClassOf|Gripper, tv|Type|RemoteControlledCar, RemoteControlledCar|SubClassOf|Object, tv|hasDisposition|s, PushableDisposition|EquivalentTo|(isDispositionOf some (hasPart some RollablePart)), s|isDispositionOf|tv, tv|hasPart|wqy, wqy|Type|PivotWheel, PivotWheel|SubClassOf|RollablePart, tv|isApproachableBy|jor, u|Type|Gripper, Gripper|SubClassOf|EndEffector, jor|hasComponent|u, u|hasApplicableForce|integer#30, tv|requiresForce|integer#30, equal(integer#30,integer#30). ",
      "answer": "\n\nThe robot can push the remote-controlled car because it has a pushing capability through its gripper, which is strong enough to apply the force required to move the car. The car is pushable due to having a rollable part (a pivot wheel), and the robot can approach the car.  \n\n\n"
    }
  ]
}