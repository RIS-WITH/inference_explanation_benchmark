{
  "id": "a_lift_hard_s",
  "template": [
    "__var0__|canLift|__var1__",
    [
      "__var0__|Type|__agent__",
      "__agent__|SubClassOf|Agent",
      "__var0__|hasCapability|__var3__",
      "LiftingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent min 2 Gripper) and (hasComponent some MotionPlanningAlgo) and (hasSomethingInHands value boolean#false))",
      "__var3__|isCapabilityOf|__var0__",
      "__var0__|hasComponent|__var4__",
      "__var4__|Type|__component__",
      "__component__|SubClassOf|Gripper",
      "__var0__|hasComponent|__var5__",
      "__var5__|Type|__component__",
      "__component__|SubClassOf|Gripper",
      "__var0__|hasComponent|__var10__",
      "__var10__|Type|MotionPlanningAlgo",
      "__var0__|hasSomethingInHands|boolean#false",
      "__var1__|Type|__object__",
      "__object__|SubClassOf|Object",
      "__var1__|hasDisposition|__var2__",
      "LiftableDisposition|EquivalentTo|(isDispositionOf some ((hasPart min 2 (HoldablePart and (isAttachedToSomething value boolean#false))) and (canBeUsed value boolean#true)))",
      "__var2__|isDispositionOf|__var1__",
      "__var1__|hasPart|__var6__",
      "__var6__|Type|__part__",
      "__part__|SubClassOf|HoldablePart",
      "__var6__|isAttachedToSomething|boolean#false",
      "__var1__|hasPart|__var7__",
      "__var7__|Type|__part__",
      "__part__|SubClassOf|HoldablePart",
      "__var7__|isAttachedToSomething|boolean#false",
      "__var1__|canBeUsed|boolean#true",
      "(isOnTouchableSupport o isInAccessibleArea o isWithinMovingRangeOf)|SubPropertyOf|isTouchableBy",
      "__var1__|isOnTouchableSupport|__var8__",
      "__var8__|isInAccessibleArea|__var9__",
      "__var9__|isWithinMovingRangeOf|__var0__",
      "__var4__|Type|Gripper",
      "Gripper|SubClassOf|EndEffector",
      "__var0__|hasComponent|__var4__",
      "__var4__|hasWeightLimit|integer#2",
      "__var1__|hasWeight|integer#1",
      "lesserThan(integer#1,integer#2)"
    ]
  ],
  "concepts": [
    "lifting",
    "liftable",
    "touchable",
    "weight limit",
    "object_weight",
    "can lift"
  ],
  "answers": [
    {
      "id": "a_lift_hard_0s",
      "selected_classes": [
        "bucket",
        "handle",
        "pepper",
        "manipulator"
      ],
      "question": "-Inference : wab|canLift|b \n -Justifications : LiftableDisposition|EquivalentTo|(isDispositionOf some ((hasPart min 2 (HoldablePart and (isAttachedToSomething value boolean#false))) and (canBeUsed value boolean#true))), fkb|isCapabilityOf|wab, b|hasPart|rq, Handle|SubClassOf|HoldablePart, LiftingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent min 2 Gripper) and (hasComponent some MotionPlanningAlgo) and (hasSomethingInHands value boolean#false)), izbh|isInAccessibleArea|sxil, wab|hasSomethingInHands|boolean#false, Pepper|SubClassOf|Agent, wab|Type|Pepper, wab|hasCapability|fkb, m|isAttachedToSomething|boolean#false, ao|Type|Manipulator, b|hasWeight|integer#31, v|Type|Manipulator, Manipulator|SubClassOf|Gripper, rq|isAttachedToSomething|boolean#false, lesserThan(integer#31,integer#55), Gripper|SubClassOf|EndEffector, ao|hasWeightLimit|integer#55, rq|Type|Handle, a|Type|MotionPlanningAlgo, wab|hasComponent|ao, b|Type|Bucket, wab|hasComponent|ao, (isOnTouchableSupport o isInAccessibleArea o isWithinMovingRangeOf)|SubPropertyOf|isTouchableBy, hbf|isDispositionOf|b, b|hasDisposition|hbf, Bucket|SubClassOf|Object, wab|hasComponent|a, Handle|SubClassOf|HoldablePart, b|hasPart|m, wab|hasComponent|v, sxil|isWithinMovingRangeOf|wab, b|canBeUsed|boolean#true, ao|Type|Gripper, m|Type|Handle, b|isOnTouchableSupport|izbh, Manipulator|SubClassOf|Gripper. ",
      "answer": "\nThe robot can lift the object because it has a lifting capability and can be used to hold objects. The object has weight and can be lifted by the robot.  \n\n\n\n**Explanation:**\n\n* **Inference:** We start with the inference statement \"wab|canLift|b\" meaning that the robot 'wab' can lift an object 'b'.\n* **Justifications:** This is where we break down the reasoning behind the inference: \n    * **LiftableDisposition:**  The robot has a disposition to be able to lift objects.\n    * **Capabilities:** The robot has a capability to lift objects, and it's connected to an object 'b'. \n    * **Object Properties:** The object 'b' has weight and can be lifted by the robot.\n\n\n**Key Points:**\n\n* **Logical Reasoning:**  The inference is based on the combination of the robot's capabilities (lifting) and the properties of the object it's supposed to lift. \n\n\n\nLet me know if you have any other inferences or need further clarification! \n"
    },
    {
      "id": "a_lift_hard_1s",
      "selected_classes": [
        "laundry basket",
        "handle",
        "robot",
        "mechanical hand"
      ],
      "question": "-Inference : ut|canLift|jsi \n -Justifications : ggeo|Type|MechanicalHand, Gripper|SubClassOf|EndEffector, lesserThan(integer#36,integer#43), jsi|isOnTouchableSupport|ati, jsi|hasPart|hyr, ggeo|hasWeightLimit|integer#43, ut|Type|Robot, sp|isCapabilityOf|ut, Handle|SubClassOf|HoldablePart, MechanicalHand|SubClassOf|Gripper, jsi|hasDisposition|os, LaundryBasket|SubClassOf|Object, jsi|hasPart|kvwg, kvwg|Type|Handle, MechanicalHand|SubClassOf|Gripper, jsi|Type|LaundryBasket, jsi|hasWeight|integer#36, qp|isWithinMovingRangeOf|ut, ut|hasComponent|ggeo, os|isDispositionOf|jsi, ggeo|Type|Gripper, ut|hasSomethingInHands|boolean#false, oheo|Type|MotionPlanningAlgo, Handle|SubClassOf|HoldablePart, ati|isInAccessibleArea|qp, Robot|SubClassOf|Agent, (isOnTouchableSupport o isInAccessibleArea o isWithinMovingRangeOf)|SubPropertyOf|isTouchableBy, pqi|Type|MechanicalHand, ut|hasComponent|oheo, LiftingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent min 2 Gripper) and (hasComponent some MotionPlanningAlgo) and (hasSomethingInHands value boolean#false)), jsi|canBeUsed|boolean#true, hyr|isAttachedToSomething|boolean#false, hyr|Type|Handle, ut|hasCapability|sp, LiftableDisposition|EquivalentTo|(isDispositionOf some ((hasPart min 2 (HoldablePart and (isAttachedToSomething value boolean#false))) and (canBeUsed value boolean#true))), kvwg|isAttachedToSomething|boolean#false, ut|hasComponent|ggeo, ut|hasComponent|pqi. ",
      "answer": "\nThe robot can lift the object because it has a gripper that can be used to lift objects and is within the moving range of the robot.  \n\n\n\n**Explanation:**\n\n* **Inference:** The inference states that the robot can lift an object.\n* **Justifications:** The justifications provide details about the robot's capabilities, including its ability to use a gripper, its position in relation to the object, and its potential for lifting. \n\n\nLet me know if you have any other inferences or justifications you'd like me to translate! "
    },
    {
      "id": "a_lift_hard_2s",
      "selected_classes": [
        "bucket",
        "handle",
        "pepper",
        "mechanical hand"
      ],
      "question": "-Inference : tq|canLift|o \n -Justifications : qt|hasWeightLimit|integer#69, tq|hasComponent|qt, o|canBeUsed|boolean#true, tq|hasComponent|adp, topm|isDispositionOf|o, (isOnTouchableSupport o isInAccessibleArea o isWithinMovingRangeOf)|SubPropertyOf|isTouchableBy, qt|Type|Gripper, tq|hasComponent|qt, aiz|Type|Handle, tq|hasCapability|uiio, o|isOnTouchableSupport|lpe, adp|Type|MechanicalHand, tq|hasSomethingInHands|boolean#false, o|hasPart|aiz, o|hasPart|yg, a|Type|MotionPlanningAlgo, uiio|isCapabilityOf|tq, aiz|isAttachedToSomething|boolean#false, LiftableDisposition|EquivalentTo|(isDispositionOf some ((hasPart min 2 (HoldablePart and (isAttachedToSomething value boolean#false))) and (canBeUsed value boolean#true))), lpe|isInAccessibleArea|uq, tq|Type|Pepper, Bucket|SubClassOf|Object, MechanicalHand|SubClassOf|Gripper, Gripper|SubClassOf|EndEffector, o|hasWeight|integer#41, o|Type|Bucket, Pepper|SubClassOf|Agent, LiftingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent min 2 Gripper) and (hasComponent some MotionPlanningAlgo) and (hasSomethingInHands value boolean#false)), qt|Type|MechanicalHand, o|hasDisposition|topm, tq|hasComponent|a, yg|isAttachedToSomething|boolean#false, lesserThan(integer#41,integer#69), Handle|SubClassOf|HoldablePart, yg|Type|Handle, MechanicalHand|SubClassOf|Gripper, uq|isWithinMovingRangeOf|tq, Handle|SubClassOf|HoldablePart. ",
      "answer": "\nThe object can be lifted because it has a weight limit and the ability to hold something.  \n\n\n\n**Explanation:**\n\n* **Inference:** The inference states that \"the object\" (represented by 'o') can be lifted. \n* **Justifications:** This inference relies on several justifications:\n    * **Weight Limit:**  The object has a defined weight limit ('qt|hasWeightLimit|integer#69').\n    * **Lifting Capability:** The object is capable of lifting something ('o|canBeUsed|boolean#true') and can be used to lift things. \n    * **Object's Structure:** The object has components like 'aiz' (Handle) and 'yg' (Handle), which are attached to the object, suggesting a structure that allows for lifting.  \n\n**Key Points:**\n\n* **Logical Connection:** The inference is based on the combination of weight limit, lifting capability, and structural elements. \n* **Clarity:** The explanation is clear and concise, focusing on the key factors that support the inference.\n\n\n\nLet me know if you'd like to explore other SWRL rule inferences! "
    },
    {
      "id": "a_lift_hard_3s",
      "selected_classes": [
        "oven tray",
        "handle",
        "robot",
        "two-finger claw"
      ],
      "question": "-Inference : dbm|canLift|mgd \n -Justifications : mgd|isOnTouchableSupport|pfqf, Grip|SubClassOf|HoldablePart, mgd|hasWeight|integer#48, l|Type|Grip, TwoFingerClaw|SubClassOf|Gripper, LiftableDisposition|EquivalentTo|(isDispositionOf some ((hasPart min 2 (HoldablePart and (isAttachedToSomething value boolean#false))) and (canBeUsed value boolean#true))), tw|isDispositionOf|mgd, (isOnTouchableSupport o isInAccessibleArea o isWithinMovingRangeOf)|SubPropertyOf|isTouchableBy, k|isAttachedToSomething|boolean#false, dzg|Type|TwoFingerClaw, OvenTray|SubClassOf|Object, dbm|hasComponent|dzg, mgd|hasDisposition|tw, TwoFingerClaw|SubClassOf|Gripper, pfqf|isInAccessibleArea|dooe, k|Type|Grip, Robot|SubClassOf|Agent, mgd|Type|OvenTray, dzg|hasWeightLimit|integer#57, ds|Type|TwoFingerClaw, mgd|hasPart|l, dbm|Type|Robot, lesserThan(integer#48,integer#57), m|isCapabilityOf|dbm, lax|Type|MotionPlanningAlgo, l|isAttachedToSomething|boolean#false, dbm|hasCapability|m, dbm|hasComponent|ds, LiftingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent min 2 Gripper) and (hasComponent some MotionPlanningAlgo) and (hasSomethingInHands value boolean#false)), dbm|hasSomethingInHands|boolean#false, Gripper|SubClassOf|EndEffector, dbm|hasComponent|dzg, dbm|hasComponent|lax, dooe|isWithinMovingRangeOf|dbm, Grip|SubClassOf|HoldablePart, dzg|Type|Gripper, mgd|canBeUsed|boolean#true, mgd|hasPart|k. ",
      "answer": "\nThe robot can lift the oven tray because it has a gripper that can hold and lift objects with weight limit of 57. The robot also has a lifting capability to move the object from one place to another.  \n\n\n\n"
    },
    {
      "id": "a_lift_hard_4s",
      "selected_classes": [
        "laundry basket",
        "handle",
        "pepper",
        "mechanical hand"
      ],
      "question": "-Inference : l|canLift|b \n -Justifications : l|hasComponent|fnld, b|hasPart|emf, emf|Type|Handle, b|isOnTouchableSupport|thpf, LiftingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent min 2 Gripper) and (hasComponent some MotionPlanningAlgo) and (hasSomethingInHands value boolean#false)), ot|Type|MechanicalHand, y|isDispositionOf|b, l|hasComponent|ot, MechanicalHand|SubClassOf|Gripper, ot|hasWeightLimit|integer#74, lesserThan(integer#52,integer#74), Handle|SubClassOf|HoldablePart, l|Type|Pepper, Handle|SubClassOf|HoldablePart, thpf|isInAccessibleArea|rhd, Gripper|SubClassOf|EndEffector, LaundryBasket|SubClassOf|Object, b|hasWeight|integer#52, LiftableDisposition|EquivalentTo|(isDispositionOf some ((hasPart min 2 (HoldablePart and (isAttachedToSomething value boolean#false))) and (canBeUsed value boolean#true))), l|hasCapability|vly, fnld|Type|MechanicalHand, MechanicalHand|SubClassOf|Gripper, b|canBeUsed|boolean#true, (isOnTouchableSupport o isInAccessibleArea o isWithinMovingRangeOf)|SubPropertyOf|isTouchableBy, b|hasPart|mo, l|hasComponent|ot, l|hasComponent|j, b|Type|LaundryBasket, Pepper|SubClassOf|Agent, emf|isAttachedToSomething|boolean#false, j|Type|MotionPlanningAlgo, mo|isAttachedToSomething|boolean#false, ot|Type|Gripper, l|hasSomethingInHands|boolean#false, vly|isCapabilityOf|l, b|hasDisposition|y, mo|Type|Handle, rhd|isWithinMovingRangeOf|l. ",
      "answer": "\nThe robot can lift the basket because it has a mechanical hand that can be used to pick up and carry objects. The robot's mechanical hand has a weight limit of 74, and it can be used to lift objects.  \n\n\n\n"
    },
    {
      "id": "a_lift_hard_5s",
      "selected_classes": [
        "oven tray",
        "handle",
        "robot",
        "manipulator"
      ],
      "question": "-Inference : qka|canLift|st \n -Justifications : st|hasWeight|integer#45, Robot|SubClassOf|Agent, xj|Type|MotionPlanningAlgo, fvd|isCapabilityOf|qka, LiftingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent min 2 Gripper) and (hasComponent some MotionPlanningAlgo) and (hasSomethingInHands value boolean#false)), qka|hasCapability|fvd, wn|Type|Grip, j|isWithinMovingRangeOf|qka, ojim|Type|Manipulator, qka|hasComponent|ojim, OvenTray|SubClassOf|Object, lw|isDispositionOf|st, qka|hasComponent|xj, qka|Type|Robot, Manipulator|SubClassOf|Gripper, st|isOnTouchableSupport|suy, aa|Type|Gripper, s|Type|Grip, wn|isAttachedToSomething|boolean#false, st|hasDisposition|lw, (isOnTouchableSupport o isInAccessibleArea o isWithinMovingRangeOf)|SubPropertyOf|isTouchableBy, suy|isInAccessibleArea|j, st|hasPart|wn, aa|Type|Manipulator, st|Type|OvenTray, qka|hasComponent|aa, LiftableDisposition|EquivalentTo|(isDispositionOf some ((hasPart min 2 (HoldablePart and (isAttachedToSomething value boolean#false))) and (canBeUsed value boolean#true))), qka|hasComponent|aa, st|canBeUsed|boolean#true, aa|hasWeightLimit|integer#76, s|isAttachedToSomething|boolean#false, Gripper|SubClassOf|EndEffector, qka|hasSomethingInHands|boolean#false, lesserThan(integer#45,integer#76), Manipulator|SubClassOf|Gripper, Grip|SubClassOf|HoldablePart, Grip|SubClassOf|HoldablePart, st|hasPart|s. ",
      "answer": "\nThe robot can lift the object because it has a lifting capability and the object has weight that is less than its maximum weight limit.  \n\n\n\n**Explanation:**\n\n* **Inference:** qka|canLift|st \n* **Justifications:** st|hasWeight|integer#45, Robot|SubClassOf|Agent, xj|Type|MotionPlanningAlgo, fvd|isCapabilityOf|qka, LiftingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent min 2 Gripper) and (hasComponent some MotionPlanningAlgo) and (hasSomethingInHands value boolean#false)), qka|hasCapability|fvd, wn|Type|Grip, j|isWithinMovingRangeOf|qka, ojim|Type|Manipulator, qka|hasComponent|ojim, OvenTray|SubClassOf|Object, lw|isDispositionOf|st, qka|hasComponent|xj, qka|Type|Robot, Manipulator|SubClassOf|Gripper, st|isOnTouchableSupport|suy, aa|Type|Gripper, s|Type|Grip, wn|isAttachedToSomething|boolean#false, st|hasDisposition|lw, (isOnTouchableSupport o isInAccessibleArea o isWithinMovingRangeOf)|SubPropertyOf|isTouchableBy, suy|isInAccessibleArea|j, st|hasPart|wn, aa|Type|Manipulator, st|Type|OvenTray, qka|hasComponent|aa, LiftableDisposition|EquivalentTo|(isDispositionOf some ((hasPart min 2 (HoldablePart and (isAttachedToSomething value boolean#false))) and (canBeUsed value boolean#true))), qka|hasComponent|aa, st|canBeUsed|boolean#true, aa|hasWeightLimit|integer#76, s|isAttachedToSomething|boolean#false, Gripper|SubClassOf|EndEffector, qka|hasSomethingInHands|boolean#false, lesserThan(integer#45,integer#76), Manipulator|SubClassOf|Gripper, Grip|SubClassOf|HoldablePart, Grip|SubClassOf|HoldablePart, st|hasPart|s. \n\n**Key Points:**\n* **Lifting Capability:** The robot has the capability to lift objects.\n* **Object Weight:** The object being lifted has a weight that is less than the robot's maximum lifting capacity.\n\n\nLet me know if you have any other inferences or justifications you'd like me to explain! "
    },
    {
      "id": "a_lift_hard_6s",
      "selected_classes": [
        "tool box",
        "handle",
        "robot",
        "mechanical hand"
      ],
      "question": "-Inference : v|canLift|nalb \n -Justifications : nalb|isOnTouchableSupport|u, nalb|hasDisposition|zp, u|isInAccessibleArea|o, LiftableDisposition|EquivalentTo|(isDispositionOf some ((hasPart min 2 (HoldablePart and (isAttachedToSomething value boolean#false))) and (canBeUsed value boolean#true))), Gripper|SubClassOf|EndEffector, nalb|Type|Toolbox, zuu|isCapabilityOf|v, Hold|SubClassOf|HoldablePart, LiftingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent min 2 Gripper) and (hasComponent some MotionPlanningAlgo) and (hasSomethingInHands value boolean#false)), ptvj|Type|Gripper, MechanicalHand|SubClassOf|Gripper, Hold|SubClassOf|HoldablePart, Robot|SubClassOf|Agent, nalb|hasPart|hul, v|hasSomethingInHands|boolean#false, lesserThan(integer#34,integer#54), kroh|Type|Hold, hul|Type|Hold, kroh|isAttachedToSomething|boolean#false, v|Type|Robot, nalb|hasWeight|integer#34, Toolbox|SubClassOf|Object, v|hasComponent|ptvj, v|hasCapability|zuu, MechanicalHand|SubClassOf|Gripper, (isOnTouchableSupport o isInAccessibleArea o isWithinMovingRangeOf)|SubPropertyOf|isTouchableBy, ptvj|hasWeightLimit|integer#54, ufg|Type|MotionPlanningAlgo, o|isWithinMovingRangeOf|v, hul|isAttachedToSomething|boolean#false, v|hasComponent|oc, v|hasComponent|ptvj, ptvj|Type|MechanicalHand, nalb|hasPart|kroh, v|hasComponent|ufg, zp|isDispositionOf|nalb, oc|Type|MechanicalHand, nalb|canBeUsed|boolean#true. ",
      "answer": "\nThe robot can lift the toolbox because it has a lifting capability and can be used to hold objects. The robot can lift the toolbox because it has a component that allows it to lift the toolbox, and the toolbox is within its moving range.  \n\n\n\n"
    },
    {
      "id": "a_lift_hard_7s",
      "selected_classes": [
        "cooking pot",
        "handle",
        "robot",
        "two-finger claw"
      ],
      "question": "-Inference : vov|canLift|szv \n -Justifications : szv|isOnTouchableSupport|hs, aj|isCapabilityOf|vov, p|Type|MotionPlanningAlgo, LiftableDisposition|EquivalentTo|(isDispositionOf some ((hasPart min 2 (HoldablePart and (isAttachedToSomething value boolean#false))) and (canBeUsed value boolean#true))), szv|Type|CookingPot, vov|hasComponent|dle, szv|hasWeight|integer#52, vov|hasComponent|dle, vov|hasComponent|aeb, szv|hasDisposition|gsr, Grip|SubClassOf|HoldablePart, LiftingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent min 2 Gripper) and (hasComponent some MotionPlanningAlgo) and (hasSomethingInHands value boolean#false)), szv|canBeUsed|boolean#true, dle|Type|TwoFingerClaw, aitn|isAttachedToSomething|boolean#false, TwoFingerClaw|SubClassOf|Gripper, aitn|Type|Grip, frt|Type|Grip, Robot|SubClassOf|Agent, lesserThan(integer#52,integer#67), (isOnTouchableSupport o isInAccessibleArea o isWithinMovingRangeOf)|SubPropertyOf|isTouchableBy, vov|hasSomethingInHands|boolean#false, Gripper|SubClassOf|EndEffector, frt|isAttachedToSomething|boolean#false, vov|hasComponent|p, szv|hasPart|frt, gsr|isDispositionOf|szv, k|isWithinMovingRangeOf|vov, vov|Type|Robot, dle|hasWeightLimit|integer#67, Grip|SubClassOf|HoldablePart, aeb|Type|TwoFingerClaw, hs|isInAccessibleArea|k, vov|hasCapability|aj, TwoFingerClaw|SubClassOf|Gripper, dle|Type|Gripper, CookingPot|SubClassOf|Object, szv|hasPart|aitn. ",
      "answer": "\nThe robot can lift the pot because it has a lifting capability and can be used to hold the pot. The robot has a component that allows it to lift the pot.  \n\n\n\n"
    },
    {
      "id": "a_lift_hard_8s",
      "selected_classes": [
        "cooking pot",
        "hand grip",
        "pepper",
        "manipulator"
      ],
      "question": "-Inference : ati|canLift|tbcr \n -Justifications : bqvs|hasWeightLimit|integer#72, ati|hasSomethingInHands|boolean#false, qw|isCapabilityOf|ati, Gripper|SubClassOf|EndEffector, ati|hasComponent|bqvs, tbcr|hasDisposition|pjb, tbcr|isOnTouchableSupport|uq, Manipulator|SubClassOf|Gripper, hg|Type|MotionPlanningAlgo, mvze|Type|HandGrip, nija|Type|HandGrip, x|Type|Manipulator, pjb|isDispositionOf|tbcr, (isOnTouchableSupport o isInAccessibleArea o isWithinMovingRangeOf)|SubPropertyOf|isTouchableBy, uq|isInAccessibleArea|orxo, bqvs|Type|Gripper, tbcr|Type|CookingPot, Pepper|SubClassOf|Agent, tbcr|canBeUsed|boolean#true, mvze|isAttachedToSomething|boolean#false, HandGrip|SubClassOf|HoldablePart, ati|Type|Pepper, CookingPot|SubClassOf|Object, ati|hasComponent|x, ati|hasCapability|qw, orxo|isWithinMovingRangeOf|ati, tbcr|hasWeight|integer#31, tbcr|hasPart|nija, LiftableDisposition|EquivalentTo|(isDispositionOf some ((hasPart min 2 (HoldablePart and (isAttachedToSomething value boolean#false))) and (canBeUsed value boolean#true))), LiftingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent min 2 Gripper) and (hasComponent some MotionPlanningAlgo) and (hasSomethingInHands value boolean#false)), nija|isAttachedToSomething|boolean#false, bqvs|Type|Manipulator, tbcr|hasPart|mvze, Manipulator|SubClassOf|Gripper, ati|hasComponent|hg, HandGrip|SubClassOf|HoldablePart, lesserThan(integer#31,integer#72), ati|hasComponent|bqvs. ",
      "answer": "\nThe robot can lift the cooking pot because it has a gripper that can hold the pot and it can be used to lift the pot. The robot can lift the pot because it has a gripper, and the pot has weight.  \n\n\n\n"
    },
    {
      "id": "a_lift_hard_9s",
      "selected_classes": [
        "laundry basket",
        "hand grip",
        "tiago",
        "mechanical hand"
      ],
      "question": "-Inference : klbr|canLift|uhkf \n -Justifications : klbr|hasComponent|tpg, d|Type|HandGrip, Tiago|SubClassOf|Agent, klbr|hasComponent|lzp, xt|isWithinMovingRangeOf|klbr, lesserThan(integer#43,integer#73), klbr|hasSomethingInHands|boolean#false, HandGrip|SubClassOf|HoldablePart, dh|isCapabilityOf|klbr, dadw|Type|MechanicalHand, HandGrip|SubClassOf|HoldablePart, veqr|Type|HandGrip, uhkf|hasDisposition|j, lzp|Type|MechanicalHand, MechanicalHand|SubClassOf|Gripper, klbr|hasCapability|dh, uhkf|hasPart|veqr, MechanicalHand|SubClassOf|Gripper, (isOnTouchableSupport o isInAccessibleArea o isWithinMovingRangeOf)|SubPropertyOf|isTouchableBy, dadw|Type|Gripper, klbr|hasComponent|dadw, Gripper|SubClassOf|EndEffector, uhkf|hasWeight|integer#43, klbr|Type|Tiago, uhkf|isOnTouchableSupport|f, klbr|hasComponent|dadw, j|isDispositionOf|uhkf, LaundryBasket|SubClassOf|Object, tpg|Type|MotionPlanningAlgo, f|isInAccessibleArea|xt, veqr|isAttachedToSomething|boolean#false, uhkf|canBeUsed|boolean#true, uhkf|Type|LaundryBasket, dadw|hasWeightLimit|integer#73, LiftableDisposition|EquivalentTo|(isDispositionOf some ((hasPart min 2 (HoldablePart and (isAttachedToSomething value boolean#false))) and (canBeUsed value boolean#true))), uhkf|hasPart|d, d|isAttachedToSomething|boolean#false, LiftingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent min 2 Gripper) and (hasComponent some MotionPlanningAlgo) and (hasSomethingInHands value boolean#false)). ",
      "answer": "\nThe robot can lift the laundry basket because it has a lifting capability, as it has a gripper that can be used to pick up objects. The robot can lift the laundry basket due to its mechanical hand and its ability to move within a certain range.  \n\n\n\n"
    },
    {
      "id": "a_lift_hard_10s",
      "selected_classes": [
        "suitcase",
        "handle",
        "tiago",
        "claw"
      ],
      "question": "-Inference : ghi|canLift|n \n -Justifications : ghi|hasComponent|ajx, hpp|isCapabilityOf|ghi, n|isOnTouchableSupport|g, n|canBeUsed|boolean#true, n|hasDisposition|e, ajx|Type|MotionPlanningAlgo, (isOnTouchableSupport o isInAccessibleArea o isWithinMovingRangeOf)|SubPropertyOf|isTouchableBy, w|hasWeightLimit|integer#65, ssz|isWithinMovingRangeOf|ghi, n|hasPart|sqc, ghi|hasSomethingInHands|boolean#false, hcr|Type|Claw, n|hasWeight|integer#51, Tiago|SubClassOf|Agent, Claw|SubClassOf|Gripper, w|Type|Claw, Hold|SubClassOf|HoldablePart, lesserThan(integer#51,integer#65), Gripper|SubClassOf|EndEffector, Hold|SubClassOf|HoldablePart, g|isInAccessibleArea|ssz, mttg|isAttachedToSomething|boolean#false, sqc|Type|Hold, w|Type|Gripper, ghi|Type|Tiago, n|Type|Suitcase, Suitcase|SubClassOf|Object, ghi|hasComponent|w, mttg|Type|Hold, n|hasPart|mttg, e|isDispositionOf|n, ghi|hasCapability|hpp, LiftingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent min 2 Gripper) and (hasComponent some MotionPlanningAlgo) and (hasSomethingInHands value boolean#false)), Claw|SubClassOf|Gripper, sqc|isAttachedToSomething|boolean#false, LiftableDisposition|EquivalentTo|(isDispositionOf some ((hasPart min 2 (HoldablePart and (isAttachedToSomething value boolean#false))) and (canBeUsed value boolean#true))), ghi|hasComponent|hcr, ghi|hasComponent|w. ",
      "answer": "\nThe 'n' can lift because it has a capability to lift something based on its component structure and the fact that it can be used.  \n\n\n\n**Explanation:**\n\n* **Inference:** The inference states that 'n' can lift. \n* **Justifications:** The justifications provide details about 'n's capabilities, including:\n    * **Components:** It has components like a claw (hcr) and a hold (w).\n    * **Capabilities:**  It has lifting capability (LiftingCapability) based on its component structure and the fact that it can be used. \n    * **Position:** 'n' is in an accessible area, and it can be used.\n\n**Key Points:**\n\n* The inference relies on the justifications to establish a causal relationship between 'n's components and its ability to lift. \n\n\nLet me know if you have any other inferences or justifications you'd like me to translate! \n"
    },
    {
      "id": "a_lift_hard_11s",
      "selected_classes": [
        "laundry basket",
        "handle",
        "pr2",
        "two-finger claw"
      ],
      "question": "-Inference : d|canLift|df \n -Justifications : df|hasPart|mbem, d|hasComponent|ktm, mbem|Type|Hold, d|hasComponent|xua, Hold|SubClassOf|HoldablePart, df|isOnTouchableSupport|pl, LiftingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent min 2 Gripper) and (hasComponent some MotionPlanningAlgo) and (hasSomethingInHands value boolean#false)), ktm|Type|TwoFingerClaw, Hold|SubClassOf|HoldablePart, (isOnTouchableSupport o isInAccessibleArea o isWithinMovingRangeOf)|SubPropertyOf|isTouchableBy, mbem|isAttachedToSomething|boolean#false, Gripper|SubClassOf|EndEffector, lr|isWithinMovingRangeOf|d, d|hasSomethingInHands|boolean#false, d|hasComponent|xua, LaundryBasket|SubClassOf|Object, qa|isAttachedToSomething|boolean#false, qa|Type|Hold, lesserThan(integer#69,integer#72), jv|Type|MotionPlanningAlgo, Pr2|SubClassOf|Agent, nm|isCapabilityOf|d, df|hasWeight|integer#69, LiftableDisposition|EquivalentTo|(isDispositionOf some ((hasPart min 2 (HoldablePart and (isAttachedToSomething value boolean#false))) and (canBeUsed value boolean#true))), xua|hasWeightLimit|integer#72, df|canBeUsed|boolean#true, d|Type|Pr2, xua|Type|Gripper, cg|isDispositionOf|df, df|hasDisposition|cg, d|hasComponent|jv, df|Type|LaundryBasket, pl|isInAccessibleArea|lr, TwoFingerClaw|SubClassOf|Gripper, df|hasPart|qa, xua|Type|TwoFingerClaw, d|hasCapability|nm, TwoFingerClaw|SubClassOf|Gripper. ",
      "answer": "\nThe robot can lift the laundry basket because it has a lifting capability and can be used to hold objects.  It has a weight limit of 72 and can be used for lifting.\n\n\n\n"
    },
    {
      "id": "a_lift_hard_12s",
      "selected_classes": [
        "cooking pot",
        "hand grip",
        "tiago",
        "manipulator"
      ],
      "question": "-Inference : fcdq|canLift|buk \n -Justifications : CookingPot|SubClassOf|Object, buk|isOnTouchableSupport|kk, (isOnTouchableSupport o isInAccessibleArea o isWithinMovingRangeOf)|SubPropertyOf|isTouchableBy, buk|hasWeight|integer#64, fcdq|hasCapability|pgz, HandGrip|SubClassOf|HoldablePart, Manipulator|SubClassOf|Gripper, LiftingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent min 2 Gripper) and (hasComponent some MotionPlanningAlgo) and (hasSomethingInHands value boolean#false)), Tiago|SubClassOf|Agent, HandGrip|SubClassOf|HoldablePart, pgz|isCapabilityOf|fcdq, bg|Type|Manipulator, v|Type|MotionPlanningAlgo, fcsk|isDispositionOf|buk, fcdq|hasComponent|v, Gripper|SubClassOf|EndEffector, ybbl|Type|Gripper, fcdq|hasComponent|ybbl, ybbl|hasWeightLimit|integer#65, vh|Type|HandGrip, lesserThan(integer#64,integer#65), buk|hasPart|vh, qbt|Type|HandGrip, buk|Type|CookingPot, vh|isAttachedToSomething|boolean#false, fcdq|hasSomethingInHands|boolean#false, LiftableDisposition|EquivalentTo|(isDispositionOf some ((hasPart min 2 (HoldablePart and (isAttachedToSomething value boolean#false))) and (canBeUsed value boolean#true))), Manipulator|SubClassOf|Gripper, buk|hasPart|qbt, gvlm|isWithinMovingRangeOf|fcdq, buk|hasDisposition|fcsk, kk|isInAccessibleArea|gvlm, buk|canBeUsed|boolean#true, ybbl|Type|Manipulator, qbt|isAttachedToSomething|boolean#false, fcdq|hasComponent|bg, fcdq|Type|Tiago, fcdq|hasComponent|ybbl. ",
      "answer": "\nThe robot can lift the pot because it has a lifting capability and can be used to lift the pot. The robot can lift the pot because it has a gripper that can hold the pot, and the pot is within its moving range.  \n\n\n\n"
    },
    {
      "id": "a_lift_hard_13s",
      "selected_classes": [
        "suitcase",
        "hand grip",
        "robot",
        "mechanical hand"
      ],
      "question": "-Inference : qngv|canLift|t \n -Justifications : t|hasPart|nx, Robot|SubClassOf|Agent, qngv|hasComponent|imp, qngv|hasComponent|urhk, imp|Type|Gripper, HandGrip|SubClassOf|HoldablePart, t|hasDisposition|w, t|isOnTouchableSupport|nfs, Suitcase|SubClassOf|Object, t|hasPart|avn, qngv|hasComponent|imp, t|hasWeight|integer#60, imp|hasWeightLimit|integer#67, imp|Type|MechanicalHand, t|Type|MechanicalHand, Gripper|SubClassOf|EndEffector, MechanicalHand|SubClassOf|Gripper, qngv|hasCapability|ng, LiftingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent min 2 Gripper) and (hasComponent some MotionPlanningAlgo) and (hasSomethingInHands value boolean#false)), qngv|hasSomethingInHands|boolean#false, avn|isAttachedToSomething|boolean#false, qngv|hasComponent|t, LiftableDisposition|EquivalentTo|(isDispositionOf some ((hasPart min 2 (HoldablePart and (isAttachedToSomething value boolean#false))) and (canBeUsed value boolean#true))), urhk|Type|MotionPlanningAlgo, nx|isAttachedToSomething|boolean#false, qngv|Type|Robot, w|isDispositionOf|t, t|Type|Suitcase, t|canBeUsed|boolean#true, lesserThan(integer#60,integer#67), nx|Type|HandGrip, suw|isWithinMovingRangeOf|qngv, nfs|isInAccessibleArea|suw, ng|isCapabilityOf|qngv, avn|Type|HandGrip, (isOnTouchableSupport o isInAccessibleArea o isWithinMovingRangeOf)|SubPropertyOf|isTouchableBy, HandGrip|SubClassOf|HoldablePart, MechanicalHand|SubClassOf|Gripper. ",
      "answer": "\nThe robot can lift the object because it has a gripper and can be used to lift objects. The robot can lift the object based on its ability to grip and move it.  \n\n\n\n**Explanation:**\n\n* **Inference:** qngv|canLift|t\n* **Justifications:** This inference is derived from the provided justifications, which detail the robot's capabilities: \n    * It has a gripper (imp) that can be used for lifting.\n    * The robot can lift objects based on its ability to grip and move them.\n\n**Key Points:**\n\n* **Lifting Capability:**  The inference states that the robot can lift an object, which is supported by the justifications. \n* **Gripper:** The robot's gripper (imp) is a key component for lifting. \n* **Object Weight:** The weight of the object being lifted is not specified in the provided information.\n\n\n\nLet me know if you have any other inference or logic-related questions! "
    },
    {
      "id": "a_lift_hard_14s",
      "selected_classes": [
        "bucket",
        "handle",
        "pr2",
        "mechanical hand"
      ],
      "question": "-Inference : mvx|canLift|css \n -Justifications : rbgx|Type|MechanicalHand, ap|Type|Grip, Grip|SubClassOf|HoldablePart, p|Type|Grip, Gripper|SubClassOf|EndEffector, ve|Type|MotionPlanningAlgo, css|hasDisposition|cm, css|canBeUsed|boolean#true, r|hasWeightLimit|integer#72, ap|isAttachedToSomething|boolean#false, mvx|hasCapability|ptfb, oz|isInAccessibleArea|snxy, mvx|hasComponent|r, css|hasWeight|integer#49, css|Type|Bucket, LiftingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent min 2 Gripper) and (hasComponent some MotionPlanningAlgo) and (hasSomethingInHands value boolean#false)), mvx|hasComponent|rbgx, r|Type|MechanicalHand, mvx|hasSomethingInHands|boolean#false, mvx|hasComponent|r, cm|isDispositionOf|css, Grip|SubClassOf|HoldablePart, Bucket|SubClassOf|Object, css|hasPart|ap, mvx|hasComponent|ve, p|isAttachedToSomething|boolean#false, lesserThan(integer#49,integer#72), r|Type|Gripper, css|isOnTouchableSupport|oz, MechanicalHand|SubClassOf|Gripper, (isOnTouchableSupport o isInAccessibleArea o isWithinMovingRangeOf)|SubPropertyOf|isTouchableBy, Pr2|SubClassOf|Agent, LiftableDisposition|EquivalentTo|(isDispositionOf some ((hasPart min 2 (HoldablePart and (isAttachedToSomething value boolean#false))) and (canBeUsed value boolean#true))), mvx|Type|Pr2, css|hasPart|p, ptfb|isCapabilityOf|mvx, snxy|isWithinMovingRangeOf|mvx, MechanicalHand|SubClassOf|Gripper. ",
      "answer": "\nThe robot can lift a bucket because it has the capability to grip and lift objects. The robot has a weight limit of 72, and it can be used for lifting.  \n\n\n\n**Explanation:**\n\n* **Inference:** mvx|canLift|css \n* **Justifications:** A detailed explanation of the justifications is provided in the text you've given. \n\n\nLet me know if you have any other inferences or need further clarification! "
    },
    {
      "id": "a_lift_hard_15s",
      "selected_classes": [
        "laundry basket",
        "handle",
        "pepper",
        "two-finger claw"
      ],
      "question": "-Inference : glab|canLift|w \n -Justifications : fx|isCapabilityOf|glab, glab|hasComponent|jijv, s|isInAccessibleArea|oi, w|isOnTouchableSupport|s, ss|isAttachedToSomething|boolean#false, ss|Type|Handle, glab|hasComponent|z, Gripper|SubClassOf|EndEffector, z|Type|MotionPlanningAlgo, LiftingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent min 2 Gripper) and (hasComponent some MotionPlanningAlgo) and (hasSomethingInHands value boolean#false)), Pepper|SubClassOf|Agent, v|isDispositionOf|w, jijv|Type|TwoFingerClaw, w|hasDisposition|v, glab|hasCapability|fx, TwoFingerClaw|SubClassOf|Gripper, w|hasWeight|integer#36, lesserThan(integer#36,integer#58), w|hasPart|ss, glab|hasComponent|hh, jijv|hasWeightLimit|integer#58, Handle|SubClassOf|HoldablePart, LaundryBasket|SubClassOf|Object, (isOnTouchableSupport o isInAccessibleArea o isWithinMovingRangeOf)|SubPropertyOf|isTouchableBy, jijv|Type|Gripper, glab|Type|Pepper, oi|isWithinMovingRangeOf|glab, glab|hasSomethingInHands|boolean#false, Handle|SubClassOf|HoldablePart, LiftableDisposition|EquivalentTo|(isDispositionOf some ((hasPart min 2 (HoldablePart and (isAttachedToSomething value boolean#false))) and (canBeUsed value boolean#true))), hur|isAttachedToSomething|boolean#false, glab|hasComponent|jijv, w|Type|LaundryBasket, TwoFingerClaw|SubClassOf|Gripper, hh|Type|TwoFingerClaw, w|hasPart|hur, w|canBeUsed|boolean#true, hur|Type|Handle. ",
      "answer": "\nThe robot can lift the object because it has a gripper that can grasp and lift objects with a weight limit of 58.  \n\n\n\n**Explanation:**\n\n* **Inference:** The inference states that the robot can lift an object.\n* **Justifications:** The justifications provide details about the robot's capabilities:\n    * It has a gripper (jijv) capable of lifting objects.\n    * The gripper is designed to be used for lifting and holding objects. \n    * The object has a weight limit of 58.\n\n\n**Key Points:**\n\n* **Logical Reasoning:**  The inference relies on the robot's ability to lift based on its gripper's capabilities and the object's weight. \n\n\n\nLet me know if you have any other SWRL rules you'd like me to translate! \n"
    },
    {
      "id": "a_lift_hard_16s",
      "selected_classes": [
        "bucket",
        "handle",
        "tiago",
        "mechanical hand"
      ],
      "question": "-Inference : q|canLift|m \n -Justifications : q|hasComponent|nsw, nhwi|Type|Grip, nsw|Type|Gripper, LiftableDisposition|EquivalentTo|(isDispositionOf some ((hasPart min 2 (HoldablePart and (isAttachedToSomething value boolean#false))) and (canBeUsed value boolean#true))), (isOnTouchableSupport o isInAccessibleArea o isWithinMovingRangeOf)|SubPropertyOf|isTouchableBy, Grip|SubClassOf|HoldablePart, m|canBeUsed|boolean#true, irf|Type|MechanicalHand, Tiago|SubClassOf|Agent, q|hasComponent|irf, m|Type|Bucket, m|hasWeight|integer#69, q|hasCapability|bbsa, Bucket|SubClassOf|Object, m|hasPart|nhwi, m|isOnTouchableSupport|tt, nhwi|isAttachedToSomething|boolean#false, nt|isAttachedToSomething|boolean#false, nsw|hasWeightLimit|integer#73, lesserThan(integer#69,integer#73), kaws|isWithinMovingRangeOf|q, nsw|Type|MechanicalHand, bbsa|isCapabilityOf|q, Grip|SubClassOf|HoldablePart, q|hasComponent|nsw, q|hasComponent|ytz, LiftingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent min 2 Gripper) and (hasComponent some MotionPlanningAlgo) and (hasSomethingInHands value boolean#false)), ytz|Type|MotionPlanningAlgo, MechanicalHand|SubClassOf|Gripper, MechanicalHand|SubClassOf|Gripper, tt|isInAccessibleArea|kaws, zf|isDispositionOf|m, Gripper|SubClassOf|EndEffector, q|Type|Tiago, m|hasPart|nt, m|hasDisposition|zf, q|hasSomethingInHands|boolean#false, nt|Type|Grip. ",
      "answer": "\nThe robot can lift the bucket because it has a grip component and can be used to hold objects. The robot's lifting capability is based on its grip component and motion planning algorithm.  \n\n\n\n**Explanation:**\n\n* **Inference:** q|canLift|m\n* **Justifications:** This inference derives from SWRL rules that define the capabilities of the robot 'q'. \n\n\nLet me know if you have any other inferences or justifications you'd like to translate! \n"
    },
    {
      "id": "a_lift_hard_17s",
      "selected_classes": [
        "bucket",
        "handle",
        "pepper",
        "manipulator"
      ],
      "question": "-Inference : s|canLift|iph \n -Justifications : mtp|isAttachedToSomething|boolean#false, LiftingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent min 2 Gripper) and (hasComponent some MotionPlanningAlgo) and (hasSomethingInHands value boolean#false)), s|hasComponent|vkq, s|hasCapability|t, Manipulator|SubClassOf|Gripper, Gripper|SubClassOf|EndEffector, lesserThan(integer#62,integer#78), iph|canBeUsed|boolean#true, k|Type|Manipulator, iph|hasWeight|integer#62, mtp|Type|Grip, t|isCapabilityOf|s, Manipulator|SubClassOf|Gripper, ql|isInAccessibleArea|wr, iph|isOnTouchableSupport|ql, s|hasComponent|k, iph|hasPart|mtp, iph|Type|Bucket, s|Type|Pepper, s|hasSomethingInHands|boolean#false, vkq|Type|MotionPlanningAlgo, us|Type|Gripper, s|hasComponent|us, (isOnTouchableSupport o isInAccessibleArea o isWithinMovingRangeOf)|SubPropertyOf|isTouchableBy, iph|hasPart|kev, iph|hasDisposition|rnu, us|hasWeightLimit|integer#78, Grip|SubClassOf|HoldablePart, Pepper|SubClassOf|Agent, Bucket|SubClassOf|Object, wr|isWithinMovingRangeOf|s, kev|isAttachedToSomething|boolean#false, LiftableDisposition|EquivalentTo|(isDispositionOf some ((hasPart min 2 (HoldablePart and (isAttachedToSomething value boolean#false))) and (canBeUsed value boolean#true))), rnu|isDispositionOf|iph, kev|Type|Grip, Grip|SubClassOf|HoldablePart, s|hasComponent|us, us|Type|Manipulator. ",
      "answer": "\nThe robot can lift the bucket because it has a lifting capability and can be used to hold objects. The robot has a grip component that allows it to lift the bucket.  \n\n\n\n"
    },
    {
      "id": "a_lift_hard_18s",
      "selected_classes": [
        "oven tray",
        "handle",
        "pr2",
        "manipulator"
      ],
      "question": "-Inference : cly|canLift|mnp \n -Justifications : zrb|Type|MotionPlanningAlgo, cly|Type|Pr2, mnp|Type|OvenTray, cly|hasComponent|b, (isOnTouchableSupport o isInAccessibleArea o isWithinMovingRangeOf)|SubPropertyOf|isTouchableBy, LiftingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent min 2 Gripper) and (hasComponent some MotionPlanningAlgo) and (hasSomethingInHands value boolean#false)), cm|isCapabilityOf|cly, jlzy|isInAccessibleArea|zw, b|Type|Manipulator, LiftableDisposition|EquivalentTo|(isDispositionOf some ((hasPart min 2 (HoldablePart and (isAttachedToSomething value boolean#false))) and (canBeUsed value boolean#true))), ot|hasWeightLimit|integer#56, Hold|SubClassOf|HoldablePart, OvenTray|SubClassOf|Object, v|isDispositionOf|mnp, ot|Type|Manipulator, mnp|canBeUsed|boolean#true, gns|Type|Hold, mnp|hasWeight|integer#40, bc|isAttachedToSomething|boolean#false, Manipulator|SubClassOf|Gripper, bc|Type|Hold, Pr2|SubClassOf|Agent, mnp|hasPart|gns, ot|Type|Gripper, cly|hasComponent|zrb, gns|isAttachedToSomething|boolean#false, zw|isWithinMovingRangeOf|cly, mnp|hasPart|bc, mnp|isOnTouchableSupport|jlzy, cly|hasCapability|cm, cly|hasComponent|ot, mnp|hasDisposition|v, Manipulator|SubClassOf|Gripper, cly|hasComponent|ot, Hold|SubClassOf|HoldablePart, lesserThan(integer#40,integer#56), cly|hasSomethingInHands|boolean#false, Gripper|SubClassOf|EndEffector. ",
      "answer": "\nThe robot can lift the oven tray because it has a lifting capability and is designed to be used for lifting objects.  It has a component that allows it to lift the object.\n\n\n\n"
    },
    {
      "id": "a_lift_hard_19s",
      "selected_classes": [
        "laundry basket",
        "handle",
        "pr2",
        "manipulator"
      ],
      "question": "-Inference : mdfe|canLift|ubj \n -Justifications : mdfe|hasComponent|zjn, rl|Type|Gripper, Manipulator|SubClassOf|Gripper, yy|isDispositionOf|ubj, mdfe|hasSomethingInHands|boolean#false, LiftableDisposition|EquivalentTo|(isDispositionOf some ((hasPart min 2 (HoldablePart and (isAttachedToSomething value boolean#false))) and (canBeUsed value boolean#true))), bayc|Type|MotionPlanningAlgo, Grip|SubClassOf|HoldablePart, hir|isCapabilityOf|mdfe, mdfe|Type|Pr2, ubj|Type|LaundryBasket, r|isAttachedToSomething|boolean#false, ubj|isOnTouchableSupport|thy, ubj|hasPart|r, mdfe|hasComponent|bayc, zjn|Type|Manipulator, mdfe|hasCapability|hir, (isOnTouchableSupport o isInAccessibleArea o isWithinMovingRangeOf)|SubPropertyOf|isTouchableBy, mdfe|hasComponent|rl, LaundryBasket|SubClassOf|Object, LiftingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent min 2 Gripper) and (hasComponent some MotionPlanningAlgo) and (hasSomethingInHands value boolean#false)), rl|Type|Manipulator, lesserThan(integer#68,integer#77), ubj|hasDisposition|yy, Gripper|SubClassOf|EndEffector, Pr2|SubClassOf|Agent, rl|hasWeightLimit|integer#77, thy|isInAccessibleArea|lw, ubj|hasPart|tt, r|Type|Grip, tt|isAttachedToSomething|boolean#false, Grip|SubClassOf|HoldablePart, lw|isWithinMovingRangeOf|mdfe, mdfe|hasComponent|rl, ubj|canBeUsed|boolean#true, tt|Type|Grip, ubj|hasWeight|integer#68, Manipulator|SubClassOf|Gripper. ",
      "answer": "\nThe robot can lift the laundry basket because it has a gripper and can be used to lift objects. The robot has a lifting capability that allows it to lift the laundry basket.  \n\n\n\n**Explanation:**\n\n* **Inference:** We start with the inference statement, \"mdfe|canLift|ubj\". \n* **Justifications:** This section provides details about why the inference is true:\n    * **mdfe's components:** The robot has a manipulator (Gripper) and a motion planning algorithm (bayc).\n    * **Lifting Capability:**  The robot can lift objects because it has a gripper, and its lifting capability is based on having a component that allows for lifting. \n    * **Laundry Basket:** The laundry basket is the object being lifted. \n\n\n**Key Concepts:**\n\n* **Inference:** We're drawing conclusions from given information (justifications).\n* **Justifications:**  These are the pieces of evidence that support the inference. \n\n\n\nLet me know if you have any other inferences or need further clarification!"
    }
  ]
}