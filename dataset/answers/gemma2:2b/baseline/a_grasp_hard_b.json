{
  "id": "a_grasp_hard_b",
  "template": [
    "__var0__|canGrasp|__var1__",
    [
      "__var0__|Type|__agent__",
      "__agent__|SubClassOf|Agent",
      "__var0__|hasCapability|__var3__",
      "GraspingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent some (Gripper and (holdsSomething value boolean#false)) and (hasComponent some MotionPlanningAlgo))",
      "__var3__|isCapabilityOf|__var0__",
      "__var0__|hasComponent|__var4__",
      "__var4__|Type|__component__",
      "__component__|SubClassOf|Gripper",
      "__var4__|holdsSomething|boolean#false",
      "__var0__|hasComponent|__var8__",
      "__var8__|Type|MotionPlanningAlgo",
      "__var1__|Type|__object__",
      "__object__|SubClassOf|Object",
      "__var1__|hasDisposition|__var2__",
      "GraspableDisposition|EquivalentTo|(isDispositionOf some ((hasPart some (GraspablePart and (IsAlreadyInUse value boolean#false)) and (isATouchableObject value boolean#true)))",
      "__var2__|isDispositionOf|__var1__",
      "__var1__|hasPart|__var5__",
      "__var5__|Type|__part__",
      "__part__|SubClassOf|GraspablePart",
      "__var5__|IsAlreadyInUse|boolean#false",
      "__var1__|isATouchableObject|boolean#true",
      "(isContainedIn o isLocatedInArea o isWithinGraspRangeOf)|SubPropertyOf|isReachableBy",
      "__var1__|isContainedIn|__var6__",
      "__var6__|isLocatedInArea|__var7__",
      "__var7__|isWithinGraspRangeOf|__var0__",
      "__var4__|Type|Gripper",
      "Gripper|SubClassOf|EndEffector",
      "__var0__|hasComponent|__var4__",
      "__var4__|hasOpeningWidth|integer#2",
      "__var1__|hasHoldingPartWidth|integer#1",
      "greaterThan(integer#2,integer#1)"
    ]
  ],
  "concepts": [
    "grasping",
    "graspable",
    "reachable",
    "opening width",
    "object_width",
    "can grasp"
  ],
  "answers": [
    {
      "id": "a_grasp_hard_0b",
      "selected_classes": [
        "cooking pot",
        "handle",
        "pr2",
        "mechanical hand"
      ],
      "question": "-Inference : ewl|canGrasp|szm \n -Justifications : ewl|Type|Pr2, Pr2|SubClassOf|Agent, ewl|hasCapability|bhu, GraspingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent some (Gripper and (holdsSomething value boolean#false)) and (hasComponent some MotionPlanningAlgo)), bhu|isCapabilityOf|ewl, ewl|hasComponent|unsz, unsz|Type|MechanicalHand, MechanicalHand|SubClassOf|Gripper, unsz|holdsSomething|boolean#false, ewl|hasComponent|cck, cck|Type|MotionPlanningAlgo, szm|Type|CookingPot, CookingPot|SubClassOf|Object, szm|hasDisposition|svy, GraspableDisposition|EquivalentTo|(isDispositionOf some ((hasPart some (GraspablePart and (IsAlreadyInUse value boolean#false)) and (isATouchableObject value boolean#true))), svy|isDispositionOf|szm, szm|hasPart|noh, noh|Type|Handle, Handle|SubClassOf|GraspablePart, noh|IsAlreadyInUse|boolean#false, szm|isATouchableObject|boolean#true, (isContainedIn o isLocatedInArea o isWithinGraspRangeOf)|SubPropertyOf|isReachableBy, szm|isContainedIn|t, t|isLocatedInArea|i, i|isWithinGraspRangeOf|ewl, unsz|Type|Gripper, Gripper|SubClassOf|EndEffector, ewl|hasComponent|unsz, unsz|hasOpeningWidth|integer#72, szm|hasHoldingPartWidth|integer#64, greaterThan(integer#72,integer#64). ",
      "answer": "\nThe robot can grasp the cooking pot because it has a grasping capability that allows it to hold something and is designed for this purpose.  \n\n\n\n**Explanation:**\n\n* **Inference:** The inference states that the robot (ewl) can grasp the cooking pot (szm).\n* **Justifications:** The justifications explain how the robot's capabilities allow it to grasp the object: \n    * It has a grasping capability (bhu) and is designed for this purpose.\n    * The robot has a gripper (unsz) that can hold something, and its opening width is greater than the cooking pot's holding part width.\n\n\n**Key Concepts:**\n\n* **Inference:**  A logical deduction based on given information. \n* **Justifications:**  Explanations of why the inference is valid. \n* **SWRL Rules:** A formal language used to define relationships between entities and concepts in ontologies. \n\n\n\nLet me know if you'd like a deeper dive into any specific aspect! "
    },
    {
      "id": "a_grasp_hard_1b",
      "selected_classes": [
        "suitcase",
        "handle",
        "pr2",
        "two-finger claw"
      ],
      "question": "-Inference : uu|canGrasp|i \n -Justifications : uu|Type|Pr2, Pr2|SubClassOf|Agent, uu|hasCapability|sydq, GraspingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent some (Gripper and (holdsSomething value boolean#false)) and (hasComponent some MotionPlanningAlgo)), sydq|isCapabilityOf|uu, uu|hasComponent|iuc, iuc|Type|TwoFingerClaw, TwoFingerClaw|SubClassOf|Gripper, iuc|holdsSomething|boolean#false, uu|hasComponent|cna, cna|Type|MotionPlanningAlgo, i|Type|Suitcase, Suitcase|SubClassOf|Object, i|hasDisposition|o, GraspableDisposition|EquivalentTo|(isDispositionOf some ((hasPart some (GraspablePart and (IsAlreadyInUse value boolean#false)) and (isATouchableObject value boolean#true))), o|isDispositionOf|i, i|hasPart|vakc, vakc|Type|Grip, Grip|SubClassOf|GraspablePart, vakc|IsAlreadyInUse|boolean#false, i|isATouchableObject|boolean#true, (isContainedIn o isLocatedInArea o isWithinGraspRangeOf)|SubPropertyOf|isReachableBy, i|isContainedIn|wtdv, wtdv|isLocatedInArea|cq, cq|isWithinGraspRangeOf|uu, iuc|Type|Gripper, Gripper|SubClassOf|EndEffector, uu|hasComponent|iuc, iuc|hasOpeningWidth|integer#37, i|hasHoldingPartWidth|integer#35, greaterThan(integer#37,integer#35). ",
      "answer": "\nThe robot can grasp the object because it has a grasping capability that allows it to hold an object. The robot's gripper is designed for grasping and its opening width is greater than the holding part width of the object.  \n\n\n\n"
    },
    {
      "id": "a_grasp_hard_2b",
      "selected_classes": [
        "shovel",
        "handle",
        "tiago",
        "manipulator"
      ],
      "question": "-Inference : lipl|canGrasp|g \n -Justifications : lipl|Type|Tiago, Tiago|SubClassOf|Agent, lipl|hasCapability|wb, GraspingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent some (Gripper and (holdsSomething value boolean#false)) and (hasComponent some MotionPlanningAlgo)), wb|isCapabilityOf|lipl, lipl|hasComponent|f, f|Type|Manipulator, Manipulator|SubClassOf|Gripper, f|holdsSomething|boolean#false, lipl|hasComponent|bubm, bubm|Type|MotionPlanningAlgo, g|Type|Shovel, Shovel|SubClassOf|Object, g|hasDisposition|k, GraspableDisposition|EquivalentTo|(isDispositionOf some ((hasPart some (GraspablePart and (IsAlreadyInUse value boolean#false)) and (isATouchableObject value boolean#true))), k|isDispositionOf|g, g|hasPart|zdc, zdc|Type|Handle, Handle|SubClassOf|GraspablePart, zdc|IsAlreadyInUse|boolean#false, g|isATouchableObject|boolean#true, (isContainedIn o isLocatedInArea o isWithinGraspRangeOf)|SubPropertyOf|isReachableBy, g|isContainedIn|zqy, zqy|isLocatedInArea|wrn, wrn|isWithinGraspRangeOf|lipl, f|Type|Gripper, Gripper|SubClassOf|EndEffector, lipl|hasComponent|f, f|hasOpeningWidth|integer#69, g|hasHoldingPartWidth|integer#50, greaterThan(integer#69,integer#50). ",
      "answer": "\nThe Tiago can grasp the shovel because it has a grasping capability and the shovel is graspable.  \n\n\n\n**Explanation:**\n\n* **Inference:** The inference states that the Tiago (a type of agent) can grasp an object, which we will call \"g\" for simplicity. \n* **Justifications:** This explanation breaks down the reasoning behind the inference:\n    * **Tiago's Capabilities:** The Tiago is a type of agent with grasping capability. It has a gripper component (f) that allows it to grasp objects.\n    * **Object Properties:**  The shovel (g) is graspable, meaning it can be grasped by the Tiago. \n\n\n**Key Concepts:**\n\n* **Inference:** A logical deduction based on given information and rules.\n* **Justifications:** The supporting evidence for the inference. In this case, we have a clear link between the Tiago's capabilities and the shovel's graspable nature.\n\n\n\nLet me know if you would like to explore other examples or have any further questions! "
    },
    {
      "id": "a_grasp_hard_3b",
      "selected_classes": [
        "toy bucket",
        "handle",
        "robot",
        "manipulator"
      ],
      "question": "-Inference : qh|canGrasp|fhss \n -Justifications : qh|Type|Robot, Robot|SubClassOf|Agent, qh|hasCapability|oq, GraspingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent some (Gripper and (holdsSomething value boolean#false)) and (hasComponent some MotionPlanningAlgo)), oq|isCapabilityOf|qh, qh|hasComponent|lch, lch|Type|Manipulator, Manipulator|SubClassOf|Gripper, lch|holdsSomething|boolean#false, qh|hasComponent|oy, oy|Type|MotionPlanningAlgo, fhss|Type|ToyBucket, ToyBucket|SubClassOf|Object, fhss|hasDisposition|a, GraspableDisposition|EquivalentTo|(isDispositionOf some ((hasPart some (GraspablePart and (IsAlreadyInUse value boolean#false)) and (isATouchableObject value boolean#true))), a|isDispositionOf|fhss, fhss|hasPart|l, l|Type|Handle, Handle|SubClassOf|GraspablePart, l|IsAlreadyInUse|boolean#false, fhss|isATouchableObject|boolean#true, (isContainedIn o isLocatedInArea o isWithinGraspRangeOf)|SubPropertyOf|isReachableBy, fhss|isContainedIn|cr, cr|isLocatedInArea|qs, qs|isWithinGraspRangeOf|qh, lch|Type|Gripper, Gripper|SubClassOf|EndEffector, qh|hasComponent|lch, lch|hasOpeningWidth|integer#44, fhss|hasHoldingPartWidth|integer#36, greaterThan(integer#44,integer#36). ",
      "answer": "\nThe robot can grasp the toy bucket because it has a grasping capability that allows it to hold the bucket. The robot's gripper is designed for this purpose and its opening width is greater than the holding part width of the bucket.  \n\n\n\n"
    },
    {
      "id": "a_grasp_hard_4b",
      "selected_classes": [
        "lunchbox",
        "hand grip",
        "robot",
        "claw"
      ],
      "question": "-Inference : erha|canGrasp|qlu \n -Justifications : erha|Type|Robot, Robot|SubClassOf|Agent, erha|hasCapability|vo, GraspingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent some (Gripper and (holdsSomething value boolean#false)) and (hasComponent some MotionPlanningAlgo)), vo|isCapabilityOf|erha, erha|hasComponent|mv, mv|Type|Claw, Claw|SubClassOf|Gripper, mv|holdsSomething|boolean#false, erha|hasComponent|i, i|Type|MotionPlanningAlgo, qlu|Type|Lunchbox, Lunchbox|SubClassOf|Object, qlu|hasDisposition|trf, GraspableDisposition|EquivalentTo|(isDispositionOf some ((hasPart some (GraspablePart and (IsAlreadyInUse value boolean#false)) and (isATouchableObject value boolean#true))), trf|isDispositionOf|qlu, qlu|hasPart|o, o|Type|HandGrip, HandGrip|SubClassOf|GraspablePart, o|IsAlreadyInUse|boolean#false, qlu|isATouchableObject|boolean#true, (isContainedIn o isLocatedInArea o isWithinGraspRangeOf)|SubPropertyOf|isReachableBy, qlu|isContainedIn|c, c|isLocatedInArea|x, x|isWithinGraspRangeOf|erha, mv|Type|Gripper, Gripper|SubClassOf|EndEffector, erha|hasComponent|mv, mv|hasOpeningWidth|integer#50, qlu|hasHoldingPartWidth|integer#42, greaterThan(integer#50,integer#42). ",
      "answer": "\nThe robot can grasp the lunchbox because it has a grasping capability and the ability to hold something. The robot's gripper is designed for this purpose.  \n\n\n\n"
    },
    {
      "id": "a_grasp_hard_5b",
      "selected_classes": [
        "cooking pot",
        "handle",
        "pepper",
        "manipulator"
      ],
      "question": "-Inference : vh|canGrasp|eu \n -Justifications : vh|Type|Pepper, Pepper|SubClassOf|Agent, vh|hasCapability|nxio, GraspingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent some (Gripper and (holdsSomething value boolean#false)) and (hasComponent some MotionPlanningAlgo)), nxio|isCapabilityOf|vh, vh|hasComponent|s, s|Type|Manipulator, Manipulator|SubClassOf|Gripper, s|holdsSomething|boolean#false, vh|hasComponent|ixa, ixa|Type|MotionPlanningAlgo, eu|Type|CookingPot, CookingPot|SubClassOf|Object, eu|hasDisposition|y, GraspableDisposition|EquivalentTo|(isDispositionOf some ((hasPart some (GraspablePart and (IsAlreadyInUse value boolean#false)) and (isATouchableObject value boolean#true))), y|isDispositionOf|eu, eu|hasPart|wc, wc|Type|Handle, Handle|SubClassOf|GraspablePart, wc|IsAlreadyInUse|boolean#false, eu|isATouchableObject|boolean#true, (isContainedIn o isLocatedInArea o isWithinGraspRangeOf)|SubPropertyOf|isReachableBy, eu|isContainedIn|bt, bt|isLocatedInArea|a, a|isWithinGraspRangeOf|vh, s|Type|Gripper, Gripper|SubClassOf|EndEffector, vh|hasComponent|s, s|hasOpeningWidth|integer#59, eu|hasHoldingPartWidth|integer#48, greaterThan(integer#59,integer#48). ",
      "answer": "\nThe Pepper robot can grasp the cooking pot because it has a grasping capability and the pot is within its reach.  \n\n\n\n**Explanation:**\n\n* **Inference:** The inference states that the Pepper robot can grasp the cooking pot.\n* **Justifications:** The justifications explain how this inference is derived:\n    * **Pepper's Capabilities:** The Pepper robot has a grasping capability (nxio) and it's a subclass of an agent. \n    * **Cooking Pot's Properties:**  The cooking pot is a specific object with a handle, and the Pepper can grasp it due to its size and shape.\n\n**Key Concepts:**\n\n* **Subclasses:** The Pepper robot is a subclass of an agent, which means it has many capabilities like grasping.\n* **Capabilities:** Grasping is one of the robot's abilities (nxio). \n* **Object Properties:**  The cooking pot has specific properties that make it suitable for grasping (handle, size, etc.).\n\n\nLet me know if you have any other SWRL rules you'd like to translate! "
    },
    {
      "id": "a_grasp_hard_6b",
      "selected_classes": [
        "mug",
        "handle",
        "pr2",
        "two-finger claw"
      ],
      "question": "-Inference : s|canGrasp|iwk \n -Justifications : s|Type|Pr2, Pr2|SubClassOf|Agent, s|hasCapability|heyl, GraspingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent some (Gripper and (holdsSomething value boolean#false)) and (hasComponent some MotionPlanningAlgo)), heyl|isCapabilityOf|s, s|hasComponent|wm, wm|Type|TwoFingerClaw, TwoFingerClaw|SubClassOf|Gripper, wm|holdsSomething|boolean#false, s|hasComponent|wf, wf|Type|MotionPlanningAlgo, iwk|Type|Mug, Mug|SubClassOf|Object, iwk|hasDisposition|vgyc, GraspableDisposition|EquivalentTo|(isDispositionOf some ((hasPart some (GraspablePart and (IsAlreadyInUse value boolean#false)) and (isATouchableObject value boolean#true))), vgyc|isDispositionOf|iwk, iwk|hasPart|gpr, gpr|Type|Handle, Handle|SubClassOf|GraspablePart, gpr|IsAlreadyInUse|boolean#false, iwk|isATouchableObject|boolean#true, (isContainedIn o isLocatedInArea o isWithinGraspRangeOf)|SubPropertyOf|isReachableBy, iwk|isContainedIn|apd, apd|isLocatedInArea|bwmt, bwmt|isWithinGraspRangeOf|s, wm|Type|Gripper, Gripper|SubClassOf|EndEffector, s|hasComponent|wm, wm|hasOpeningWidth|integer#79, iwk|hasHoldingPartWidth|integer#54, greaterThan(integer#79,integer#54). ",
      "answer": "\nThe robot can grasp the mug because it has a grasping capability and the mug is graspable. The robot's gripper is designed to hold the mug.  \n\n\n\n"
    },
    {
      "id": "a_grasp_hard_7b",
      "selected_classes": [
        "mug",
        "handle",
        "pr2",
        "claw"
      ],
      "question": "-Inference : mxi|canGrasp|n \n -Justifications : mxi|Type|Pr2, Pr2|SubClassOf|Agent, mxi|hasCapability|iaqq, GraspingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent some (Gripper and (holdsSomething value boolean#false)) and (hasComponent some MotionPlanningAlgo)), iaqq|isCapabilityOf|mxi, mxi|hasComponent|jeg, jeg|Type|Claw, Claw|SubClassOf|Gripper, jeg|holdsSomething|boolean#false, mxi|hasComponent|alws, alws|Type|MotionPlanningAlgo, n|Type|Mug, Mug|SubClassOf|Object, n|hasDisposition|j, GraspableDisposition|EquivalentTo|(isDispositionOf some ((hasPart some (GraspablePart and (IsAlreadyInUse value boolean#false)) and (isATouchableObject value boolean#true))), j|isDispositionOf|n, n|hasPart|vf, vf|Type|Handle, Handle|SubClassOf|GraspablePart, vf|IsAlreadyInUse|boolean#false, n|isATouchableObject|boolean#true, (isContainedIn o isLocatedInArea o isWithinGraspRangeOf)|SubPropertyOf|isReachableBy, n|isContainedIn|ubo, ubo|isLocatedInArea|oin, oin|isWithinGraspRangeOf|mxi, jeg|Type|Gripper, Gripper|SubClassOf|EndEffector, mxi|hasComponent|jeg, jeg|hasOpeningWidth|integer#73, n|hasHoldingPartWidth|integer#37, greaterThan(integer#73,integer#37). ",
      "answer": "\nThe robot can grasp the mug because it has a grasping capability and its gripper is designed to hold objects. The robot's gripper is capable of holding the mug due to its opening width being greater than the mug's holding part width.  \n\n\n\n"
    },
    {
      "id": "a_grasp_hard_8b",
      "selected_classes": [
        "mug",
        "hand grip",
        "tiago",
        "two-finger claw"
      ],
      "question": "-Inference : b|canGrasp|tenf \n -Justifications : b|Type|Tiago, Tiago|SubClassOf|Agent, b|hasCapability|wq, GraspingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent some (Gripper and (holdsSomething value boolean#false)) and (hasComponent some MotionPlanningAlgo)), wq|isCapabilityOf|b, b|hasComponent|aae, aae|Type|TwoFingerClaw, TwoFingerClaw|SubClassOf|Gripper, aae|holdsSomething|boolean#false, b|hasComponent|k, k|Type|MotionPlanningAlgo, tenf|Type|Mug, Mug|SubClassOf|Object, tenf|hasDisposition|xcbo, GraspableDisposition|EquivalentTo|(isDispositionOf some ((hasPart some (GraspablePart and (IsAlreadyInUse value boolean#false)) and (isATouchableObject value boolean#true))), xcbo|isDispositionOf|tenf, tenf|hasPart|hhu, hhu|Type|HandGrip, HandGrip|SubClassOf|GraspablePart, hhu|IsAlreadyInUse|boolean#false, tenf|isATouchableObject|boolean#true, (isContainedIn o isLocatedInArea o isWithinGraspRangeOf)|SubPropertyOf|isReachableBy, tenf|isContainedIn|fla, fla|isLocatedInArea|hxkh, hxkh|isWithinGraspRangeOf|b, aae|Type|Gripper, Gripper|SubClassOf|EndEffector, b|hasComponent|aae, aae|hasOpeningWidth|integer#51, tenf|hasHoldingPartWidth|integer#35, greaterThan(integer#51,integer#35). ",
      "answer": "\nThe Tiago can grasp the mug because it has a grasping capability and the mug is graspable. The Tiago's gripper is designed to hold the mug.  \n\n\n\n"
    },
    {
      "id": "a_grasp_hard_9b",
      "selected_classes": [
        "mug",
        "hand grip",
        "tiago",
        "claw"
      ],
      "question": "-Inference : gbv|canGrasp|yazk \n -Justifications : gbv|Type|Tiago, Tiago|SubClassOf|Agent, gbv|hasCapability|bws, GraspingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent some (Gripper and (holdsSomething value boolean#false)) and (hasComponent some MotionPlanningAlgo)), bws|isCapabilityOf|gbv, gbv|hasComponent|b, b|Type|Claw, Claw|SubClassOf|Gripper, b|holdsSomething|boolean#false, gbv|hasComponent|lx, lx|Type|MotionPlanningAlgo, yazk|Type|Mug, Mug|SubClassOf|Object, yazk|hasDisposition|ws, GraspableDisposition|EquivalentTo|(isDispositionOf some ((hasPart some (GraspablePart and (IsAlreadyInUse value boolean#false)) and (isATouchableObject value boolean#true))), ws|isDispositionOf|yazk, yazk|hasPart|g, g|Type|HandGrip, HandGrip|SubClassOf|GraspablePart, g|IsAlreadyInUse|boolean#false, yazk|isATouchableObject|boolean#true, (isContainedIn o isLocatedInArea o isWithinGraspRangeOf)|SubPropertyOf|isReachableBy, yazk|isContainedIn|qas, qas|isLocatedInArea|buli, buli|isWithinGraspRangeOf|gbv, b|Type|Gripper, Gripper|SubClassOf|EndEffector, gbv|hasComponent|b, b|hasOpeningWidth|integer#77, yazk|hasHoldingPartWidth|integer#63, greaterThan(integer#77,integer#63). ",
      "answer": "\nThe Tiago can grasp the mug because it has a grasping capability and the mug is graspable. The Tiago's gripper is designed to hold the mug.  \n\n\n\n"
    },
    {
      "id": "a_grasp_hard_10b",
      "selected_classes": [
        "toy bucket",
        "handle",
        "tiago",
        "mechanical hand"
      ],
      "question": "-Inference : qua|canGrasp|s \n -Justifications : qua|Type|Tiago, Tiago|SubClassOf|Agent, qua|hasCapability|s, GraspingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent some (Gripper and (holdsSomething value boolean#false)) and (hasComponent some MotionPlanningAlgo)), s|isCapabilityOf|qua, qua|hasComponent|gw, gw|Type|MechanicalHand, MechanicalHand|SubClassOf|Gripper, gw|holdsSomething|boolean#false, qua|hasComponent|m, m|Type|MotionPlanningAlgo, s|Type|ToyBucket, ToyBucket|SubClassOf|Object, s|hasDisposition|smy, GraspableDisposition|EquivalentTo|(isDispositionOf some ((hasPart some (GraspablePart and (IsAlreadyInUse value boolean#false)) and (isATouchableObject value boolean#true))), smy|isDispositionOf|s, s|hasPart|xh, xh|Type|Grip, Grip|SubClassOf|GraspablePart, xh|IsAlreadyInUse|boolean#false, s|isATouchableObject|boolean#true, (isContainedIn o isLocatedInArea o isWithinGraspRangeOf)|SubPropertyOf|isReachableBy, s|isContainedIn|fjtv, fjtv|isLocatedInArea|uu, uu|isWithinGraspRangeOf|qua, gw|Type|Gripper, Gripper|SubClassOf|EndEffector, qua|hasComponent|gw, gw|hasOpeningWidth|integer#64, s|hasHoldingPartWidth|integer#45, greaterThan(integer#64,integer#45). ",
      "answer": "\nThe Tiago can grasp something because it has a grasping capability and the object being grasped is within its reach.  \n\n\n\n**Explanation:**\n\n* **Inference:** The inference states that the Tiago can grasp something.\n* **Justifications:** The justifications explain how this inference is derived:\n    * **Tiago's Capabilities:** The Tiago is an agent with a grasping capability (s). \n    * **Grasping Mechanism:**  The Tiago has a gripper (gw) that allows it to grasp objects. This gripper has a specific opening width (64 units). \n    * **Object Grasp:** The object being grasped must be within the Tiago's reach, and its holding part width is greater than the gripper's opening width.\n\n\n**Key Concepts:**\n\n* **Inference:**  A logical deduction based on given information.\n* **Justifications:**  Explanations of how the inference is derived from the provided rules and relationships. \n\n\n\nLet me know if you have any other SWRL rule examples you'd like to translate! "
    },
    {
      "id": "a_grasp_hard_11b",
      "selected_classes": [
        "shovel",
        "hand grip",
        "tiago",
        "two-finger claw"
      ],
      "question": "-Inference : idjo|canGrasp|szdy \n -Justifications : idjo|Type|Tiago, Tiago|SubClassOf|Agent, idjo|hasCapability|twcv, GraspingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent some (Gripper and (holdsSomething value boolean#false)) and (hasComponent some MotionPlanningAlgo)), twcv|isCapabilityOf|idjo, idjo|hasComponent|cv, cv|Type|TwoFingerClaw, TwoFingerClaw|SubClassOf|Gripper, cv|holdsSomething|boolean#false, idjo|hasComponent|f, f|Type|MotionPlanningAlgo, szdy|Type|Shovel, Shovel|SubClassOf|Object, szdy|hasDisposition|h, GraspableDisposition|EquivalentTo|(isDispositionOf some ((hasPart some (GraspablePart and (IsAlreadyInUse value boolean#false)) and (isATouchableObject value boolean#true))), h|isDispositionOf|szdy, szdy|hasPart|ii, ii|Type|HandGrip, HandGrip|SubClassOf|GraspablePart, ii|IsAlreadyInUse|boolean#false, szdy|isATouchableObject|boolean#true, (isContainedIn o isLocatedInArea o isWithinGraspRangeOf)|SubPropertyOf|isReachableBy, szdy|isContainedIn|ze, ze|isLocatedInArea|mg, mg|isWithinGraspRangeOf|idjo, cv|Type|Gripper, Gripper|SubClassOf|EndEffector, idjo|hasComponent|cv, cv|hasOpeningWidth|integer#69, szdy|hasHoldingPartWidth|integer#58, greaterThan(integer#69,integer#58). ",
      "answer": "\nThe Tiago can grasp the shovel because it has a grasping capability that allows it to hold something. The shovel is graspable and within its grasp range.  \n\n\n\n**Explanation:**\n\n* **Inference:** We start with the inference statement, \"idjo|canGrasp|szdy\". This means the Tiago can grasp the shovel.\n* **Justifications:** We then break down the justifications for this inference: \n    * **idjo's capabilities:** The Tiago is a capable agent that has a grasping capability (twcv) and can hold something (holdsSomething).\n    * **szdy's properties:**  The shovel is graspable, it's within the Tiago's grasp range. \n\n\n**Key Concepts:**\n\n* **Inference:** We are drawing conclusions based on given information.\n* **Justifications:** These are the pieces of evidence that support our inference. \n* **Capabilities:** The ability to perform a specific action (grasping in this case).\n* **Properties:**  Characteristics or attributes of an object (graspable, within grasp range).\n\n\n\nLet me know if you'd like to explore other SWRL rule examples! "
    },
    {
      "id": "a_grasp_hard_12b",
      "selected_classes": [
        "shovel",
        "hand grip",
        "robot",
        "mechanical hand"
      ],
      "question": "-Inference : i|canGrasp|imd \n -Justifications : i|Type|Robot, Robot|SubClassOf|Agent, i|hasCapability|flt, GraspingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent some (Gripper and (holdsSomething value boolean#false)) and (hasComponent some MotionPlanningAlgo)), flt|isCapabilityOf|i, i|hasComponent|ing, ing|Type|MechanicalHand, MechanicalHand|SubClassOf|Gripper, ing|holdsSomething|boolean#false, i|hasComponent|vh, vh|Type|MotionPlanningAlgo, imd|Type|Shovel, Shovel|SubClassOf|Object, imd|hasDisposition|wzm, GraspableDisposition|EquivalentTo|(isDispositionOf some ((hasPart some (GraspablePart and (IsAlreadyInUse value boolean#false)) and (isATouchableObject value boolean#true))), wzm|isDispositionOf|imd, imd|hasPart|aba, aba|Type|HandGrip, HandGrip|SubClassOf|GraspablePart, aba|IsAlreadyInUse|boolean#false, imd|isATouchableObject|boolean#true, (isContainedIn o isLocatedInArea o isWithinGraspRangeOf)|SubPropertyOf|isReachableBy, imd|isContainedIn|bgvj, bgvj|isLocatedInArea|allf, allf|isWithinGraspRangeOf|i, ing|Type|Gripper, Gripper|SubClassOf|EndEffector, i|hasComponent|ing, ing|hasOpeningWidth|integer#71, imd|hasHoldingPartWidth|integer#59, greaterThan(integer#71,integer#59). ",
      "answer": "\nThe robot can grasp the shovel because it has a grasping capability and its mechanical hand is designed to hold objects. The robot's mechanical hand is capable of grasping the shovel.  \n\n\n\n"
    },
    {
      "id": "a_grasp_hard_13b",
      "selected_classes": [
        "mug",
        "handle",
        "pr2",
        "claw"
      ],
      "question": "-Inference : mkuh|canGrasp|vqhp \n -Justifications : mkuh|Type|Pr2, Pr2|SubClassOf|Agent, mkuh|hasCapability|xf, GraspingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent some (Gripper and (holdsSomething value boolean#false)) and (hasComponent some MotionPlanningAlgo)), xf|isCapabilityOf|mkuh, mkuh|hasComponent|kcdk, kcdk|Type|Claw, Claw|SubClassOf|Gripper, kcdk|holdsSomething|boolean#false, mkuh|hasComponent|ft, ft|Type|MotionPlanningAlgo, vqhp|Type|Mug, Mug|SubClassOf|Object, vqhp|hasDisposition|xn, GraspableDisposition|EquivalentTo|(isDispositionOf some ((hasPart some (GraspablePart and (IsAlreadyInUse value boolean#false)) and (isATouchableObject value boolean#true))), xn|isDispositionOf|vqhp, vqhp|hasPart|lddo, lddo|Type|Grip, Grip|SubClassOf|GraspablePart, lddo|IsAlreadyInUse|boolean#false, vqhp|isATouchableObject|boolean#true, (isContainedIn o isLocatedInArea o isWithinGraspRangeOf)|SubPropertyOf|isReachableBy, vqhp|isContainedIn|xjc, xjc|isLocatedInArea|f, f|isWithinGraspRangeOf|mkuh, kcdk|Type|Gripper, Gripper|SubClassOf|EndEffector, mkuh|hasComponent|kcdk, kcdk|hasOpeningWidth|integer#79, vqhp|hasHoldingPartWidth|integer#63, greaterThan(integer#79,integer#63). ",
      "answer": "\nThe robot can grasp the mug because it has a grasping capability and its gripper is designed to hold objects. The robot's gripper is capable of holding the mug due to its opening width being greater than the mug's holding part width.  \n\n\n\n"
    },
    {
      "id": "a_grasp_hard_14b",
      "selected_classes": [
        "lunchbox",
        "hand grip",
        "pr2",
        "mechanical hand"
      ],
      "question": "-Inference : km|canGrasp|iwf \n -Justifications : km|Type|Pr2, Pr2|SubClassOf|Agent, km|hasCapability|x, GraspingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent some (Gripper and (holdsSomething value boolean#false)) and (hasComponent some MotionPlanningAlgo)), x|isCapabilityOf|km, km|hasComponent|u, u|Type|MechanicalHand, MechanicalHand|SubClassOf|Gripper, u|holdsSomething|boolean#false, km|hasComponent|mj, mj|Type|MotionPlanningAlgo, iwf|Type|Lunchbox, Lunchbox|SubClassOf|Object, iwf|hasDisposition|dgys, GraspableDisposition|EquivalentTo|(isDispositionOf some ((hasPart some (GraspablePart and (IsAlreadyInUse value boolean#false)) and (isATouchableObject value boolean#true))), dgys|isDispositionOf|iwf, iwf|hasPart|h, h|Type|HandGrip, HandGrip|SubClassOf|GraspablePart, h|IsAlreadyInUse|boolean#false, iwf|isATouchableObject|boolean#true, (isContainedIn o isLocatedInArea o isWithinGraspRangeOf)|SubPropertyOf|isReachableBy, iwf|isContainedIn|upit, upit|isLocatedInArea|nibg, nibg|isWithinGraspRangeOf|km, u|Type|Gripper, Gripper|SubClassOf|EndEffector, km|hasComponent|u, u|hasOpeningWidth|integer#74, iwf|hasHoldingPartWidth|integer#61, greaterThan(integer#74,integer#61). ",
      "answer": "\nThe robot can grasp the lunchbox because it has a grasping capability that allows it to hold the lunchbox. The robot's gripper is designed for this purpose and its opening width is greater than the holding part width of the lunchbox.  \n\n\n\n"
    },
    {
      "id": "a_grasp_hard_15b",
      "selected_classes": [
        "toy bucket",
        "handle",
        "pr2",
        "two-finger claw"
      ],
      "question": "-Inference : ujq|canGrasp|h \n -Justifications : ujq|Type|Pr2, Pr2|SubClassOf|Agent, ujq|hasCapability|puxw, GraspingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent some (Gripper and (holdsSomething value boolean#false)) and (hasComponent some MotionPlanningAlgo)), puxw|isCapabilityOf|ujq, ujq|hasComponent|afbw, afbw|Type|TwoFingerClaw, TwoFingerClaw|SubClassOf|Gripper, afbw|holdsSomething|boolean#false, ujq|hasComponent|m, m|Type|MotionPlanningAlgo, h|Type|ToyBucket, ToyBucket|SubClassOf|Object, h|hasDisposition|bhzu, GraspableDisposition|EquivalentTo|(isDispositionOf some ((hasPart some (GraspablePart and (IsAlreadyInUse value boolean#false)) and (isATouchableObject value boolean#true))), bhzu|isDispositionOf|h, h|hasPart|lx, lx|Type|Handle, Handle|SubClassOf|GraspablePart, lx|IsAlreadyInUse|boolean#false, h|isATouchableObject|boolean#true, (isContainedIn o isLocatedInArea o isWithinGraspRangeOf)|SubPropertyOf|isReachableBy, h|isContainedIn|wocu, wocu|isLocatedInArea|lzvq, lzvq|isWithinGraspRangeOf|ujq, afbw|Type|Gripper, Gripper|SubClassOf|EndEffector, ujq|hasComponent|afbw, afbw|hasOpeningWidth|integer#68, h|hasHoldingPartWidth|integer#62, greaterThan(integer#68,integer#62). ",
      "answer": "\nThe robot can grasp the object because it has a grasping capability that allows it to hold something.  It has a gripper component with a specific opening width and can grasp objects within its reach.\n\n\n\n"
    },
    {
      "id": "a_grasp_hard_16b",
      "selected_classes": [
        "toy bucket",
        "handle",
        "robot",
        "mechanical hand"
      ],
      "question": "-Inference : q|canGrasp|u \n -Justifications : q|Type|Robot, Robot|SubClassOf|Agent, q|hasCapability|jg, GraspingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent some (Gripper and (holdsSomething value boolean#false)) and (hasComponent some MotionPlanningAlgo)), jg|isCapabilityOf|q, q|hasComponent|uyqy, uyqy|Type|MechanicalHand, MechanicalHand|SubClassOf|Gripper, uyqy|holdsSomething|boolean#false, q|hasComponent|qtvc, qtvc|Type|MotionPlanningAlgo, u|Type|ToyBucket, ToyBucket|SubClassOf|Object, u|hasDisposition|s, GraspableDisposition|EquivalentTo|(isDispositionOf some ((hasPart some (GraspablePart and (IsAlreadyInUse value boolean#false)) and (isATouchableObject value boolean#true))), s|isDispositionOf|u, u|hasPart|nlj, nlj|Type|Handle, Handle|SubClassOf|GraspablePart, nlj|IsAlreadyInUse|boolean#false, u|isATouchableObject|boolean#true, (isContainedIn o isLocatedInArea o isWithinGraspRangeOf)|SubPropertyOf|isReachableBy, u|isContainedIn|pp, pp|isLocatedInArea|sj, sj|isWithinGraspRangeOf|q, uyqy|Type|Gripper, Gripper|SubClassOf|EndEffector, q|hasComponent|uyqy, uyqy|hasOpeningWidth|integer#39, u|hasHoldingPartWidth|integer#34, greaterThan(integer#39,integer#34). ",
      "answer": "\nThe robot can grasp the object because it has a grasping capability that allows it to hold something. The robot's gripper is designed for this purpose and can grasp objects of a certain size.  \n\n\n\n"
    },
    {
      "id": "a_grasp_hard_17b",
      "selected_classes": [
        "shovel",
        "handle",
        "robot",
        "two-finger claw"
      ],
      "question": "-Inference : ipo|canGrasp|gm \n -Justifications : ipo|Type|Robot, Robot|SubClassOf|Agent, ipo|hasCapability|yjb, GraspingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent some (Gripper and (holdsSomething value boolean#false)) and (hasComponent some MotionPlanningAlgo)), yjb|isCapabilityOf|ipo, ipo|hasComponent|usmg, usmg|Type|TwoFingerClaw, TwoFingerClaw|SubClassOf|Gripper, usmg|holdsSomething|boolean#false, ipo|hasComponent|b, b|Type|MotionPlanningAlgo, gm|Type|Shovel, Shovel|SubClassOf|Object, gm|hasDisposition|ap, GraspableDisposition|EquivalentTo|(isDispositionOf some ((hasPart some (GraspablePart and (IsAlreadyInUse value boolean#false)) and (isATouchableObject value boolean#true))), ap|isDispositionOf|gm, gm|hasPart|yefe, yefe|Type|Handle, Handle|SubClassOf|GraspablePart, yefe|IsAlreadyInUse|boolean#false, gm|isATouchableObject|boolean#true, (isContainedIn o isLocatedInArea o isWithinGraspRangeOf)|SubPropertyOf|isReachableBy, gm|isContainedIn|dzg, dzg|isLocatedInArea|xw, xw|isWithinGraspRangeOf|ipo, usmg|Type|Gripper, Gripper|SubClassOf|EndEffector, ipo|hasComponent|usmg, usmg|hasOpeningWidth|integer#74, gm|hasHoldingPartWidth|integer#62, greaterThan(integer#74,integer#62). ",
      "answer": "\nThe robot can grasp the shovel because it has a grasping capability that allows it to hold something. The robot's gripper is designed for this purpose and can be used to grasp objects like shovels.  \n\n\n\n"
    },
    {
      "id": "a_grasp_hard_18b",
      "selected_classes": [
        "suitcase",
        "handle",
        "pr2",
        "two-finger claw"
      ],
      "question": "-Inference : vu|canGrasp|xw \n -Justifications : vu|Type|Pr2, Pr2|SubClassOf|Agent, vu|hasCapability|wo, GraspingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent some (Gripper and (holdsSomething value boolean#false)) and (hasComponent some MotionPlanningAlgo)), wo|isCapabilityOf|vu, vu|hasComponent|w, w|Type|TwoFingerClaw, TwoFingerClaw|SubClassOf|Gripper, w|holdsSomething|boolean#false, vu|hasComponent|nyo, nyo|Type|MotionPlanningAlgo, xw|Type|Suitcase, Suitcase|SubClassOf|Object, xw|hasDisposition|f, GraspableDisposition|EquivalentTo|(isDispositionOf some ((hasPart some (GraspablePart and (IsAlreadyInUse value boolean#false)) and (isATouchableObject value boolean#true))), f|isDispositionOf|xw, xw|hasPart|o, o|Type|Grip, Grip|SubClassOf|GraspablePart, o|IsAlreadyInUse|boolean#false, xw|isATouchableObject|boolean#true, (isContainedIn o isLocatedInArea o isWithinGraspRangeOf)|SubPropertyOf|isReachableBy, xw|isContainedIn|f, f|isLocatedInArea|b, b|isWithinGraspRangeOf|vu, w|Type|Gripper, Gripper|SubClassOf|EndEffector, vu|hasComponent|w, w|hasOpeningWidth|integer#56, xw|hasHoldingPartWidth|integer#44, greaterThan(integer#56,integer#44). ",
      "answer": "\nThe robot can grasp the suitcase because it has a grasping capability that allows it to hold something. The robot's gripper is designed for two-finger claw action and can grasp objects within its reach.  \n\n\n\n"
    },
    {
      "id": "a_grasp_hard_19b",
      "selected_classes": [
        "toy bucket",
        "handle",
        "tiago",
        "mechanical hand"
      ],
      "question": "-Inference : lkxb|canGrasp|ajk \n -Justifications : lkxb|Type|Tiago, Tiago|SubClassOf|Agent, lkxb|hasCapability|su, GraspingCapability|EquivalentTo|(isCapabilityOf some ((hasComponent some (Gripper and (holdsSomething value boolean#false)) and (hasComponent some MotionPlanningAlgo)), su|isCapabilityOf|lkxb, lkxb|hasComponent|r, r|Type|MechanicalHand, MechanicalHand|SubClassOf|Gripper, r|holdsSomething|boolean#false, lkxb|hasComponent|puo, puo|Type|MotionPlanningAlgo, ajk|Type|ToyBucket, ToyBucket|SubClassOf|Object, ajk|hasDisposition|j, GraspableDisposition|EquivalentTo|(isDispositionOf some ((hasPart some (GraspablePart and (IsAlreadyInUse value boolean#false)) and (isATouchableObject value boolean#true))), j|isDispositionOf|ajk, ajk|hasPart|f, f|Type|Handle, Handle|SubClassOf|GraspablePart, f|IsAlreadyInUse|boolean#false, ajk|isATouchableObject|boolean#true, (isContainedIn o isLocatedInArea o isWithinGraspRangeOf)|SubPropertyOf|isReachableBy, ajk|isContainedIn|s, s|isLocatedInArea|l, l|isWithinGraspRangeOf|lkxb, r|Type|Gripper, Gripper|SubClassOf|EndEffector, lkxb|hasComponent|r, r|hasOpeningWidth|integer#72, ajk|hasHoldingPartWidth|integer#49, greaterThan(integer#72,integer#49). ",
      "answer": "\nThe Tiago can grasp the toy bucket because it has a grasping capability and its gripper component is designed to hold objects. The bucket is graspable and within the Tiago's reach.  \n\n\n\n"
    }
  ]
}